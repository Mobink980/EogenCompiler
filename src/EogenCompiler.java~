/* The following code was generated by JFlex 1.7.0 */

import java.util.*;


/**
 * This class is a scanner generated by 
 * <a href="http://www.jflex.de/">JFlex</a> 1.7.0
 * from the specification file <tt>EogenCompiler.flex</tt>
 */
class EogenCompiler {

  /** This character denotes the end of file */
  public static final int YYEOF = -1;

  /** initial size of the lookahead buffer */
  private static final int ZZ_BUFFERSIZE = 16384;

  /** lexical states */
  public static final int YYINITIAL = 0;

  /**
   * ZZ_LEXSTATE[l] is the state in the DFA for the lexical state l
   * ZZ_LEXSTATE[l+1] is the state in the DFA for the lexical state l
   *                  at the beginning of a line
   * l is of the form l = 2*k, k a non negative integer
   */
  private static final int ZZ_LEXSTATE[] = { 
     0, 0
  };

  /** 
   * Translates characters to character classes
   */
  private static final String ZZ_CMAP_PACKED = 
    "\11\56\1\3\1\2\1\0\1\3\1\1\16\56\4\0\1\3\1\0"+
    "\1\0\1\0\1\55\2\0\1\0\1\25\1\26\1\5\1\44\1\53"+
    "\1\14\1\12\1\4\1\6\3\7\4\7\2\7\1\54\2\0\1\47"+
    "\3\0\4\11\1\13\1\11\2\55\1\60\11\55\1\61\4\55\1\10"+
    "\2\55\1\50\1\15\1\52\1\46\1\55\1\0\1\23\1\36\1\22"+
    "\1\41\1\31\1\27\1\55\1\24\1\33\1\55\1\43\1\34\1\45"+
    "\1\42\1\30\1\51\1\55\1\17\1\35\1\16\1\40\1\37\1\32"+
    "\1\10\1\20\1\55\1\21\1\0\1\57\1\0\41\56\2\0\4\55"+
    "\4\0\1\55\2\0\1\56\7\0\1\55\4\0\1\55\5\0\27\55"+
    "\1\0\37\55\1\0\u01ca\55\4\0\14\55\16\0\5\55\7\0\1\55"+
    "\1\0\1\55\21\0\160\56\5\55\1\0\2\55\2\0\4\55\1\0"+
    "\1\55\6\0\1\55\1\0\3\55\1\0\1\55\1\0\24\55\1\0"+
    "\123\55\1\0\213\55\1\0\5\56\2\0\246\55\1\0\46\55\2\0"+
    "\1\55\7\0\47\55\7\0\1\55\1\0\55\56\1\0\1\56\1\0"+
    "\2\56\1\0\2\56\1\0\1\56\10\0\33\55\5\0\3\55\15\0"+
    "\6\56\5\0\1\55\4\0\13\56\1\0\1\56\3\0\53\55\37\56"+
    "\4\0\2\55\1\56\143\55\1\0\1\55\10\56\1\0\6\56\2\55"+
    "\2\56\1\0\4\56\2\55\12\56\3\55\2\0\1\55\17\0\1\56"+
    "\1\55\1\56\36\55\33\56\2\0\131\55\13\56\1\55\16\0\12\56"+
    "\41\55\11\56\2\55\4\0\1\55\5\0\26\55\4\56\1\55\11\56"+
    "\1\55\3\56\1\55\5\56\22\0\31\55\3\56\4\0\13\55\65\0"+
    "\25\55\1\0\10\55\26\0\60\56\66\55\3\56\1\55\22\56\1\55"+
    "\7\56\12\55\2\56\2\0\12\56\1\0\20\55\3\56\1\0\10\55"+
    "\2\0\2\55\2\0\26\55\1\0\7\55\1\0\1\55\3\0\4\55"+
    "\2\0\1\56\1\55\7\56\2\0\2\56\2\0\3\56\1\55\10\0"+
    "\1\56\4\0\2\55\1\0\3\55\2\56\2\0\12\56\4\55\7\0"+
    "\2\55\4\0\3\56\1\0\6\55\4\0\2\55\2\0\26\55\1\0"+
    "\7\55\1\0\2\55\1\0\2\55\1\0\2\55\2\0\1\56\1\0"+
    "\5\56\4\0\2\56\2\0\3\56\3\0\1\56\7\0\4\55\1\0"+
    "\1\55\7\0\14\56\3\55\1\56\13\0\3\56\1\0\11\55\1\0"+
    "\3\55\1\0\26\55\1\0\7\55\1\0\2\55\1\0\5\55\2\0"+
    "\1\56\1\55\10\56\1\0\3\56\1\0\3\56\2\0\1\55\17\0"+
    "\2\55\2\56\2\0\12\56\1\0\1\55\7\0\1\55\6\56\1\0"+
    "\3\56\1\0\10\55\2\0\2\55\2\0\26\55\1\0\7\55\1\0"+
    "\2\55\1\0\5\55\2\0\1\56\1\55\7\56\2\0\2\56\2\0"+
    "\3\56\10\0\2\56\4\0\2\55\1\0\3\55\2\56\2\0\12\56"+
    "\1\0\1\55\20\0\1\56\1\55\1\0\6\55\3\0\3\55\1\0"+
    "\4\55\3\0\2\55\1\0\1\55\1\0\2\55\3\0\2\55\3\0"+
    "\3\55\3\0\14\55\4\0\5\56\3\0\3\56\1\0\4\56\2\0"+
    "\1\55\6\0\1\56\16\0\12\56\11\0\1\55\6\0\4\56\1\0"+
    "\10\55\1\0\3\55\1\0\27\55\1\0\20\55\3\0\1\55\7\56"+
    "\1\0\3\56\1\0\4\56\7\0\2\56\1\0\3\55\5\0\2\55"+
    "\2\56\2\0\12\56\20\0\1\55\3\56\1\0\10\55\1\0\3\55"+
    "\1\0\27\55\1\0\12\55\1\0\5\55\2\0\1\56\1\55\7\56"+
    "\1\0\3\56\1\0\4\56\7\0\2\56\7\0\1\55\1\0\2\55"+
    "\2\56\2\0\12\56\1\0\2\55\15\0\4\56\1\0\10\55\1\0"+
    "\3\55\1\0\51\55\2\56\1\55\7\56\1\0\3\56\1\0\4\56"+
    "\1\55\5\0\3\55\1\56\7\0\3\55\2\56\2\0\12\56\12\0"+
    "\6\55\2\0\2\56\1\0\22\55\3\0\30\55\1\0\11\55\1\0"+
    "\1\55\2\0\7\55\3\0\1\56\4\0\6\56\1\0\1\56\1\0"+
    "\10\56\6\0\12\56\2\0\2\56\15\0\60\55\1\56\2\55\7\56"+
    "\4\0\10\55\10\56\1\0\12\56\47\0\2\55\1\0\1\55\2\0"+
    "\2\55\1\0\1\55\2\0\1\55\6\0\4\55\1\0\7\55\1\0"+
    "\3\55\1\0\1\55\1\0\1\55\2\0\2\55\1\0\4\55\1\56"+
    "\2\55\6\56\1\0\2\56\1\55\2\0\5\55\1\0\1\55\1\0"+
    "\6\56\2\0\12\56\2\0\4\55\40\0\1\55\27\0\2\56\6\0"+
    "\12\56\13\0\1\56\1\0\1\56\1\0\1\56\4\0\2\56\10\55"+
    "\1\0\44\55\4\0\24\56\1\0\2\56\5\55\13\56\1\0\44\56"+
    "\11\0\1\56\71\0\53\55\24\56\1\55\12\56\6\0\6\55\4\56"+
    "\4\55\3\56\1\55\3\56\2\55\7\56\3\55\4\56\15\55\14\56"+
    "\1\55\17\56\2\0\46\55\1\0\1\55\5\0\1\55\2\0\53\55"+
    "\1\0\u014d\55\1\0\4\55\2\0\7\55\1\0\1\55\1\0\4\55"+
    "\2\0\51\55\1\0\4\55\2\0\41\55\1\0\4\55\2\0\7\55"+
    "\1\0\1\55\1\0\4\55\2\0\17\55\1\0\71\55\1\0\4\55"+
    "\2\0\103\55\2\0\3\56\40\0\20\55\20\0\126\55\2\0\6\55"+
    "\3\0\u026c\55\2\0\21\55\1\0\32\55\5\0\113\55\3\0\13\55"+
    "\7\0\15\55\1\0\4\55\3\56\13\0\22\55\3\56\13\0\22\55"+
    "\2\56\14\0\15\55\1\0\3\55\1\0\2\56\14\0\64\55\40\56"+
    "\3\0\1\55\3\0\2\55\1\56\2\0\12\56\41\0\4\56\1\0"+
    "\12\56\6\0\130\55\10\0\5\55\2\56\42\55\1\56\1\55\5\0"+
    "\106\55\12\0\37\55\1\0\14\56\4\0\14\56\12\0\12\56\36\55"+
    "\2\0\5\55\13\0\54\55\4\0\32\55\6\0\12\56\46\0\27\55"+
    "\5\56\4\0\65\55\12\56\1\0\35\56\2\0\13\56\6\0\12\56"+
    "\15\0\1\55\10\0\16\56\102\0\5\56\57\55\21\56\7\55\4\0"+
    "\12\56\21\0\11\56\14\0\3\56\36\55\15\56\2\55\12\56\54\55"+
    "\16\56\14\0\44\55\24\56\10\0\12\56\3\0\3\55\12\56\44\55"+
    "\2\0\11\55\107\0\3\56\1\0\25\56\4\55\1\56\4\55\3\56"+
    "\2\55\3\56\6\0\300\55\72\56\1\0\5\56\u0116\55\2\0\6\55"+
    "\2\0\46\55\2\0\6\55\2\0\10\55\1\0\1\55\1\0\1\55"+
    "\1\0\1\55\1\0\37\55\2\0\65\55\1\0\7\55\1\0\1\55"+
    "\3\0\3\55\1\0\7\55\3\0\4\55\2\0\6\55\4\0\15\55"+
    "\5\0\3\55\1\0\7\55\16\0\5\56\32\0\5\56\20\0\2\55"+
    "\23\0\1\55\13\0\5\56\1\0\12\56\1\0\1\55\15\0\1\55"+
    "\20\0\15\55\3\0\40\55\20\0\15\56\4\0\1\56\3\0\14\56"+
    "\21\0\1\55\4\0\1\55\2\0\12\55\1\0\1\55\3\0\5\55"+
    "\6\0\1\55\1\0\1\55\1\0\1\55\1\0\4\55\1\0\13\55"+
    "\2\0\4\55\5\0\5\55\4\0\1\55\21\0\51\55\u0a77\0\57\55"+
    "\1\0\57\55\1\0\205\55\6\0\4\55\3\56\2\55\14\0\46\55"+
    "\1\0\1\55\5\0\1\55\2\0\70\55\7\0\1\55\17\0\1\56"+
    "\27\55\11\0\7\55\1\0\7\55\1\0\7\55\1\0\7\55\1\0"+
    "\7\55\1\0\7\55\1\0\7\55\1\0\7\55\1\0\40\56\57\0"+
    "\1\55\u01d5\0\3\55\31\0\11\55\6\56\1\0\5\55\2\0\5\55"+
    "\4\0\126\55\2\0\2\56\2\0\3\55\1\0\132\55\1\0\4\55"+
    "\5\0\52\55\2\0\136\55\21\0\33\55\65\0\20\55\u0200\0\u19b6\55"+
    "\112\0\u51eb\55\25\0\u048d\55\103\0\56\55\2\0\u010d\55\3\0\20\55"+
    "\12\56\2\55\24\0\57\55\1\56\4\0\12\56\1\0\37\55\2\56"+
    "\120\55\2\56\45\0\11\55\2\0\147\55\2\0\44\55\1\0\10\55"+
    "\77\0\13\55\1\56\3\55\1\56\4\55\1\56\27\55\5\56\20\0"+
    "\1\55\7\0\64\55\14\0\2\56\62\55\22\56\12\0\12\56\6\0"+
    "\22\56\6\55\3\0\1\55\1\0\1\55\2\0\12\56\34\55\10\56"+
    "\2\0\27\55\15\56\14\0\35\55\3\0\4\56\57\55\16\56\16\0"+
    "\1\55\12\56\6\0\5\55\1\56\12\55\12\56\5\55\1\0\51\55"+
    "\16\56\11\0\3\55\1\56\10\55\2\56\2\0\12\56\6\0\27\55"+
    "\3\0\1\55\3\56\62\55\1\56\1\55\3\56\2\55\2\56\5\55"+
    "\2\56\1\55\1\56\1\55\30\0\3\55\2\0\13\55\5\56\2\0"+
    "\3\55\2\56\12\0\6\55\2\0\6\55\2\0\6\55\11\0\7\55"+
    "\1\0\7\55\1\0\53\55\1\0\12\55\12\0\163\55\10\56\1\0"+
    "\2\56\2\0\12\56\6\0\u2ba4\55\14\0\27\55\4\0\61\55\u2104\0"+
    "\u016e\55\2\0\152\55\46\0\7\55\14\0\5\55\5\0\1\55\1\56"+
    "\12\55\1\0\15\55\1\0\5\55\1\0\1\55\1\0\2\55\1\0"+
    "\2\55\1\0\154\55\41\0\u016b\55\22\0\100\55\2\0\66\55\50\0"+
    "\15\55\3\0\20\56\20\0\20\56\3\0\2\55\30\0\3\55\31\0"+
    "\1\55\6\0\5\55\1\0\207\55\2\0\1\56\4\0\1\55\13\0"+
    "\12\56\7\0\32\55\4\0\1\55\1\0\32\55\13\0\131\55\3\0"+
    "\6\55\2\0\6\55\2\0\6\55\2\0\3\55\3\0\2\55\3\0"+
    "\2\55\22\0\3\56\4\0\14\55\1\0\32\55\1\0\23\55\1\0"+
    "\2\55\1\0\17\55\2\0\16\55\42\0\173\55\105\0\65\55\210\0"+
    "\1\56\202\0\35\55\3\0\61\55\17\0\1\56\37\0\40\55\15\0"+
    "\36\55\5\0\46\55\5\56\5\0\36\55\2\0\44\55\4\0\10\55"+
    "\1\0\5\55\52\0\236\55\2\0\12\56\6\0\44\55\4\0\44\55"+
    "\4\0\50\55\10\0\64\55\234\0\u0137\55\11\0\26\55\12\0\10\55"+
    "\230\0\6\55\2\0\1\55\1\0\54\55\1\0\2\55\3\0\1\55"+
    "\2\0\27\55\12\0\27\55\11\0\37\55\101\0\23\55\1\0\2\55"+
    "\12\0\26\55\12\0\32\55\106\0\70\55\6\0\2\55\100\0\1\55"+
    "\3\56\1\0\2\56\5\0\4\56\4\55\1\0\3\55\1\0\33\55"+
    "\4\0\3\56\4\0\1\56\40\0\35\55\3\0\35\55\43\0\10\55"+
    "\1\0\34\55\2\56\31\0\66\55\12\0\26\55\12\0\23\55\15\0"+
    "\22\55\156\0\111\55\67\0\63\55\15\0\63\55\u030d\0\3\56\65\55"+
    "\17\56\37\0\12\56\17\0\4\56\55\55\13\56\2\0\1\56\22\0"+
    "\31\55\7\0\12\56\6\0\3\56\44\55\16\56\1\0\12\56\20\0"+
    "\43\55\1\56\2\0\1\55\11\0\3\56\60\55\16\56\4\55\5\0"+
    "\3\56\3\0\12\56\1\55\1\0\1\55\43\0\22\55\1\0\31\55"+
    "\14\56\6\0\1\56\101\0\7\55\1\0\1\55\1\0\4\55\1\0"+
    "\17\55\1\0\12\55\7\0\57\55\14\56\5\0\12\56\6\0\4\56"+
    "\1\0\10\55\2\0\2\55\2\0\26\55\1\0\7\55\1\0\2\55"+
    "\1\0\5\55\2\0\1\56\1\55\7\56\2\0\2\56\2\0\3\56"+
    "\2\0\1\55\6\0\1\56\5\0\5\55\2\56\2\0\7\56\3\0"+
    "\5\56\213\0\65\55\22\56\4\55\5\0\12\56\46\0\60\55\24\56"+
    "\2\55\1\0\1\55\10\0\12\56\246\0\57\55\7\56\2\0\11\56"+
    "\27\0\4\55\2\56\42\0\60\55\21\56\3\0\1\55\13\0\12\56"+
    "\46\0\53\55\15\56\10\0\12\56\66\0\32\55\3\0\17\56\4\0"+
    "\12\56\u0166\0\100\55\12\56\25\0\1\55\u0100\0\1\55\12\56\50\55"+
    "\7\56\1\55\4\56\10\0\1\56\10\0\1\55\13\56\50\55\2\0"+
    "\4\55\20\56\46\0\71\55\u0107\0\11\55\1\0\45\55\10\56\1\0"+
    "\10\56\1\55\17\0\12\56\30\0\36\55\2\0\26\56\1\0\16\56"+
    "\111\0\7\55\1\0\2\55\1\0\46\55\6\56\3\0\1\56\1\0"+
    "\2\56\1\0\7\56\1\55\1\56\10\0\12\56\u02a6\0\u039a\55\146\0"+
    "\157\55\21\0\304\55\u0abc\0\u042f\55\u0fd1\0\u0247\55\u21b9\0\u0239\55\7\0"+
    "\37\55\1\0\12\56\146\0\36\55\2\0\5\56\13\0\60\55\7\56"+
    "\11\0\4\55\14\0\12\56\11\0\25\55\5\0\23\55\u0370\0\105\55"+
    "\13\0\1\55\56\56\20\0\4\56\15\55\100\0\2\55\36\0\u17ed\55"+
    "\23\0\u02f3\55\u250d\0\u011f\55\121\0\u018c\55\u0904\0\153\55\5\0\15\55"+
    "\3\0\11\55\7\0\12\55\3\0\2\56\1\0\4\56\u14c1\0\5\56"+
    "\3\0\26\56\2\0\7\56\36\0\4\56\224\0\3\56\u01bb\0\125\55"+
    "\1\0\107\55\1\0\2\55\2\0\1\55\2\0\2\55\2\0\4\55"+
    "\1\0\14\55\1\0\1\55\1\0\7\55\1\0\101\55\1\0\4\55"+
    "\2\0\10\55\1\0\7\55\1\0\34\55\1\0\4\55\1\0\5\55"+
    "\1\0\1\55\3\0\7\55\1\0\u0154\55\2\0\31\55\1\0\31\55"+
    "\1\0\37\55\1\0\31\55\1\0\37\55\1\0\31\55\1\0\37\55"+
    "\1\0\31\55\1\0\37\55\1\0\31\55\1\0\10\55\2\0\62\56"+
    "\u0200\0\67\56\4\0\62\56\10\0\1\56\16\0\1\56\26\0\5\56"+
    "\1\0\17\56\u0550\0\7\56\1\0\21\56\2\0\7\56\1\0\2\56"+
    "\1\0\5\56\u07d5\0\305\55\13\0\7\56\51\0\104\55\7\56\5\0"+
    "\12\56\u04a6\0\4\55\1\0\33\55\1\0\2\55\1\0\1\55\2\0"+
    "\1\55\1\0\12\55\1\0\4\55\1\0\1\55\1\0\1\55\6\0"+
    "\1\55\4\0\1\55\1\0\1\55\1\0\1\55\1\0\3\55\1\0"+
    "\2\55\1\0\1\55\2\0\1\55\1\0\1\55\1\0\1\55\1\0"+
    "\1\55\1\0\1\55\1\0\2\55\1\0\1\55\2\0\4\55\1\0"+
    "\7\55\1\0\4\55\1\0\4\55\1\0\1\55\1\0\12\55\1\0"+
    "\21\55\5\0\3\55\1\0\5\55\1\0\21\55\u1144\0\ua6d7\55\51\0"+
    "\u1035\55\13\0\336\55\2\0\u1682\55\16\0\u1d31\55\u0c1f\0\u021e\55\uffff\0\uffff\0\uffff\0\uffff\0\uffff\0\uffff\0\uffff\0\uffff\0\uffff\0\uffff\0\uffff\0\u05ee\0"+
    "\1\56\36\0\140\56\200\0\360\56\uffff\0\uffff\0\ufe12\0";

  /** 
   * Translates characters to character classes
   */
  private static final char [] ZZ_CMAP = zzUnpackCMap(ZZ_CMAP_PACKED);

  /** 
   * Translates DFA states to action switch labels.
   */
  private static final int [] ZZ_ACTION = zzUnpackAction();

  private static final String ZZ_ACTION_PACKED_0 =
    "\1\0\1\1\2\2\4\1\1\3\6\1\1\0\1\2"+
    "\24\0\1\4\22\0\1\5\1\6\12\0\3\7\2\0"+
    "\3\10\2\0\2\11\4\0\2\12\3\13\16\0\3\14"+
    "\3\0\3\15\3\0\2\4\13\0\3\12\16\0\1\7"+
    "\3\0\1\10\10\0\1\13\7\0\1\12\1\0\1\12"+
    "\1\16\5\0\1\14\4\0\1\15\16\0\1\12\1\0"+
    "\1\12\4\0\5\7\1\0\5\10\2\0\5\13\1\0"+
    "\1\12\1\17\2\0\1\12\1\20\10\0\5\14\1\0"+
    "\3\7\5\15\11\0\1\12\2\0\1\12\3\0\1\16"+
    "\3\0\4\7\1\10\1\0\1\13\12\0\1\14\3\0"+
    "\1\15\2\0\1\21\10\0\1\20\3\0\1\16\5\0"+
    "\1\7\1\10\1\0\1\13\1\12\1\0\1\12\1\22"+
    "\4\0\1\12\1\23\1\0\1\12\2\0\1\14\1\0"+
    "\3\7\1\15\6\0\1\12\1\20\2\0\1\12\1\0"+
    "\1\12\2\0\4\7\1\10\1\0\1\13\6\0\1\12"+
    "\1\24\1\0\1\12\1\0\1\14\1\0\1\7\1\15"+
    "\10\0\1\23\2\12\1\0\2\7\1\10\1\0\1\13"+
    "\1\0\1\12\1\25\6\0\1\14\3\7\1\15\5\0"+
    "\1\26\1\12\1\0\1\23\1\24\1\0\2\7\1\10"+
    "\1\0\1\13\1\0\1\27\2\30\1\0\1\31\2\0"+
    "\1\14\2\0\1\7\1\15\2\0\1\32\3\0\1\25"+
    "\1\27\1\0\2\7\1\10\1\0\1\13\3\0\1\12"+
    "\1\33\1\14\4\7\1\15\2\34\1\0\1\25\1\12"+
    "\1\7\1\35\2\0\2\7\1\0\1\7\2\36\1\37"+
    "\12\7";

  private static int [] zzUnpackAction() {
    int [] result = new int[484];
    int offset = 0;
    offset = zzUnpackAction(ZZ_ACTION_PACKED_0, offset, result);
    return result;
  }

  private static int zzUnpackAction(String packed, int offset, int [] result) {
    int i = 0;       /* index in packed string  */
    int j = offset;  /* index in unpacked array */
    int l = packed.length();
    while (i < l) {
      int count = packed.charAt(i++);
      int value = packed.charAt(i++);
      do result[j++] = value; while (--count > 0);
    }
    return j;
  }


  /** 
   * Translates a state to a row index in the transition table
   */
  private static final int [] ZZ_ROWMAP = zzUnpackRowMap();

  private static final String ZZ_ROWMAP_PACKED_0 =
    "\0\0\0\62\0\144\0\226\0\310\0\372\0\u012c\0\u015e"+
    "\0\u0190\0\u01c2\0\u01f4\0\u0226\0\u0258\0\u028a\0\u02bc\0\u02ee"+
    "\0\u02ee\0\u0320\0\u0352\0\u0384\0\u03b6\0\u03e8\0\u041a\0\u044c"+
    "\0\u047e\0\u04b0\0\u04e2\0\u0514\0\u0546\0\u0578\0\u05aa\0\u05dc"+
    "\0\u060e\0\u0640\0\u0672\0\u06a4\0\u06d6\0\u0708\0\u073a\0\u015e"+
    "\0\u076c\0\u079e\0\u07d0\0\u0802\0\u0834\0\u0866\0\u0898\0\u08ca"+
    "\0\u08fc\0\u092e\0\u0960\0\u0992\0\u09c4\0\u09f6\0\u0a28\0\u0a5a"+
    "\0\u092e\0\62\0\u0a8c\0\u0abe\0\u0af0\0\u0b22\0\u0b54\0\u0b86"+
    "\0\u0bb8\0\u0bea\0\u0c1c\0\u0c4e\0\u0c80\0\u0cb2\0\u0ce4\0\u0d16"+
    "\0\u0d48\0\u0d7a\0\u0dac\0\u0dde\0\u0e10\0\u0e42\0\u0e74\0\62"+
    "\0\u0ea6\0\u0ed8\0\u0f0a\0\u0f3c\0\u0f6e\0\u0fa0\0\u0fd2\0\u1004"+
    "\0\u1036\0\u1068\0\u109a\0\u10cc\0\u10fe\0\u1130\0\u1162\0\u1194"+
    "\0\u11c6\0\u11f8\0\u122a\0\u125c\0\u128e\0\u12c0\0\u12f2\0\u1324"+
    "\0\u1356\0\u1388\0\u13ba\0\u13ec\0\u141e\0\u1450\0\u1482\0\u14b4"+
    "\0\u14e6\0\u1518\0\u154a\0\u157c\0\62\0\u15ae\0\u15e0\0\u1612"+
    "\0\u1644\0\u1676\0\u16a8\0\u16da\0\372\0\u170c\0\u173e\0\u1770"+
    "\0\u17a2\0\u17d4\0\u1806\0\u1838\0\u186a\0\u189c\0\u18ce\0\u1900"+
    "\0\u1932\0\u1964\0\u1996\0\u19c8\0\u19fa\0\u1a2c\0\u1a5e\0\u1a90"+
    "\0\u1ac2\0\u1af4\0\u1b26\0\u1b58\0\u1b8a\0\u1bbc\0\u1bee\0\u1c20"+
    "\0\u1c52\0\u1c84\0\u1cb6\0\u1ce8\0\u1d1a\0\u1d4c\0\u1d7e\0\u1db0"+
    "\0\u1de2\0\u1e14\0\u1e46\0\u1e78\0\u1eaa\0\u1edc\0\u1f0e\0\u1f40"+
    "\0\u1f72\0\u1fa4\0\u1fd6\0\u2008\0\u203a\0\u206c\0\u209e\0\u20d0"+
    "\0\u2102\0\u2134\0\u2166\0\u2198\0\u21ca\0\u21fc\0\u222e\0\u2260"+
    "\0\u2292\0\u22c4\0\u22f6\0\u2328\0\u235a\0\u238c\0\u23be\0\u23f0"+
    "\0\u2422\0\u2454\0\u2486\0\u24b8\0\u24ea\0\u251c\0\u254e\0\u2580"+
    "\0\u25b2\0\u25e4\0\u2616\0\62\0\u1ac2\0\u2648\0\u267a\0\u267a"+
    "\0\u26ac\0\62\0\u1b8a\0\u26de\0\u2710\0\u2710\0\u2742\0\u2774"+
    "\0\62\0\u1d4c\0\u27a6\0\u27d8\0\u27d8\0\u280a\0\62\0\u283c"+
    "\0\u286e\0\u28a0\0\u28d2\0\u2904\0\u2936\0\u2968\0\u299a\0\u29cc"+
    "\0\u29fe\0\u2a30\0\u2a62\0\u2a94\0\62\0\u209e\0\u2ac6\0\u2af8"+
    "\0\u2af8\0\u2b2a\0\u2b5c\0\u2b8e\0\u2bc0\0\62\0\u2198\0\u2bf2"+
    "\0\u2c24\0\u2c24\0\u2c56\0\u2c88\0\u2cba\0\u2cec\0\u2d1e\0\u2d50"+
    "\0\u2d82\0\u2db4\0\u2de6\0\u2e18\0\u2e4a\0\u2e7c\0\u2eae\0\u2ee0"+
    "\0\u2f12\0\u2f44\0\u2f76\0\u2fa8\0\u2fda\0\u300c\0\u303e\0\u3070"+
    "\0\u30a2\0\u30d4\0\u3106\0\u3138\0\u316a\0\u319c\0\u31ce\0\u3200"+
    "\0\u3232\0\u3264\0\u3296\0\u32c8\0\u32fa\0\u332c\0\u335e\0\u3390"+
    "\0\u33c2\0\u33f4\0\u3426\0\u3458\0\u348a\0\62\0\u34bc\0\u34ee"+
    "\0\u3520\0\u3552\0\u3584\0\u35b6\0\u35e8\0\u361a\0\u364c\0\u367e"+
    "\0\u36b0\0\u36e2\0\u3714\0\u3746\0\u3778\0\u37aa\0\u37dc\0\u380e"+
    "\0\u3840\0\u3872\0\u38a4\0\u38d6\0\u3908\0\u393a\0\u396c\0\62"+
    "\0\u399e\0\u39d0\0\u3a02\0\u3a34\0\u3a66\0\u3a98\0\u3aca\0\u3afc"+
    "\0\u3b2e\0\u3b60\0\u3b92\0\u3bc4\0\u33c2\0\u3bf6\0\u3c28\0\u3c5a"+
    "\0\u3c8c\0\u3cbe\0\u3cf0\0\u3d22\0\u3d54\0\u3d86\0\u3db8\0\u3dea"+
    "\0\u3e1c\0\u3e4e\0\u3e80\0\u3eb2\0\u3ee4\0\u3f16\0\u3f48\0\u37dc"+
    "\0\u3f7a\0\u3fac\0\u3fde\0\u4010\0\u4042\0\u4074\0\u40a6\0\u40d8"+
    "\0\u410a\0\u413c\0\u416e\0\u41a0\0\u41d2\0\62\0\u4204\0\u4236"+
    "\0\u4268\0\u429a\0\u42cc\0\u42fe\0\u4330\0\u4362\0\u4394\0\u43c6"+
    "\0\u43f8\0\u442a\0\u445c\0\u448e\0\u44c0\0\u44f2\0\u4524\0\u4556"+
    "\0\u4588\0\u45ba\0\u45ec\0\u461e\0\u4650\0\u4682\0\u46b4\0\u46e6"+
    "\0\u4718\0\u474a\0\u477c\0\u47ae\0\u47e0\0\u4812\0\u4844\0\u4876"+
    "\0\u48a8\0\u48da\0\u490c\0\u493e\0\u4970\0\u49a2\0\u49d4\0\u4a06"+
    "\0\u4a38\0\62\0\u4a6a\0\u4a9c\0\u4ace\0\u238c\0\u4b00\0\u4b32"+
    "\0\u4b64\0\u4b96\0\u4bc8\0\u4bfa\0\u4c2c\0\u4c5e\0\u4c90\0\62"+
    "\0\u4cc2\0\62\0\u4cf4\0\u4d26\0\u4d58\0\u4d8a\0\u4dbc\0\u4dee"+
    "\0\u4e20\0\u4e52\0\u0fa0\0\62\0\u4e84\0\u4eb6\0\u4ee8\0\u4f1a"+
    "\0\u4f4c\0\u4f7e\0\u4fb0\0\u4fe2\0\u5014\0\u5046\0\u5078\0\u50aa"+
    "\0\u50dc\0\u510e\0\u5140\0\62\0\u5172\0\u4d8a\0\u51a4\0\u51d6"+
    "\0\u5208\0\u523a\0\u526c\0\62\0\u529e\0\u52d0\0\u5302\0\u5334"+
    "\0\62\0\u5366\0\u5398\0\u53ca\0\u53fc\0\u542e\0\u5460\0\u5492"+
    "\0\62\0\62\0\u54c4\0\u54f6\0\u5528\0\u555a\0\u03e8\0\u0a8c"+
    "\0\u558c\0\u55be\0\u55f0\0\u1a90";

  private static int [] zzUnpackRowMap() {
    int [] result = new int[484];
    int offset = 0;
    offset = zzUnpackRowMap(ZZ_ROWMAP_PACKED_0, offset, result);
    return result;
  }

  private static int zzUnpackRowMap(String packed, int offset, int [] result) {
    int i = 0;  /* index in packed string  */
    int j = offset;  /* index in unpacked array */
    int l = packed.length();
    while (i < l) {
      int high = packed.charAt(i++) << 16;
      result[j++] = high | packed.charAt(i++);
    }
    return j;
  }

  /** 
   * The transition table of the DFA
   */
  private static final int [] ZZ_TRANS = zzUnpackTrans();

  private static final String ZZ_TRANS_PACKED_0 =
    "\1\2\1\3\2\4\1\5\1\6\1\7\1\10\2\2"+
    "\1\11\1\2\1\6\4\2\1\12\3\2\1\13\16\2"+
    "\1\6\1\14\1\6\1\15\1\16\7\2\1\17\1\2"+
    "\63\0\1\20\1\21\1\20\1\22\1\23\1\24\1\25"+
    "\2\26\1\27\1\26\1\30\1\0\1\31\2\26\1\32"+
    "\1\33\2\26\1\32\1\0\1\34\1\35\1\26\1\36"+
    "\1\37\1\26\1\40\1\41\5\26\1\42\1\43\1\44"+
    "\1\32\1\45\1\26\3\0\1\26\2\0\2\26\1\0"+
    "\3\20\1\22\1\23\1\24\1\25\2\26\1\27\1\26"+
    "\1\30\1\0\1\31\2\26\1\32\1\33\2\26\1\32"+
    "\1\0\1\34\1\35\1\26\1\36\1\37\1\26\1\40"+
    "\1\41\5\26\1\42\1\43\1\44\1\32\1\45\1\26"+
    "\3\0\1\26\2\0\2\26\4\0\1\46\1\47\1\24"+
    "\1\25\2\0\1\27\55\0\1\24\1\25\2\0\1\27"+
    "\53\0\1\22\1\23\2\50\1\51\1\0\1\52\1\53"+
    "\1\30\14\0\1\53\12\0\1\42\1\54\1\44\17\0"+
    "\1\22\1\23\2\50\2\0\1\52\1\53\1\30\14\0"+
    "\1\53\12\0\1\42\1\54\1\44\21\0\2\52\62\0"+
    "\2\26\1\0\1\26\2\0\3\26\1\0\3\26\2\0"+
    "\15\26\1\0\1\26\3\0\1\26\3\0\1\26\2\0"+
    "\2\26\1\0\3\55\4\0\2\26\1\0\1\26\2\0"+
    "\3\26\1\56\3\26\1\56\1\0\15\26\1\0\1\26"+
    "\1\0\1\56\1\57\1\26\3\0\1\26\2\0\2\26"+
    "\30\0\1\60\37\0\1\24\1\25\2\26\1\27\1\26"+
    "\2\0\3\26\1\0\3\26\2\0\15\26\1\0\1\26"+
    "\2\0\1\61\1\26\3\0\1\26\2\0\2\26\1\62"+
    "\2\63\1\64\2\62\1\65\1\66\2\67\1\70\1\67"+
    "\1\62\1\0\3\67\1\62\3\67\2\62\15\67\1\62"+
    "\1\67\3\62\1\67\1\71\2\62\1\67\2\62\2\67"+
    "\61\0\1\72\1\0\3\20\1\22\1\23\1\24\1\25"+
    "\2\73\1\27\1\73\1\30\1\0\1\74\2\73\1\32"+
    "\1\75\2\73\1\32\1\0\1\76\1\77\1\73\1\100"+
    "\1\101\1\73\1\102\1\103\5\73\1\42\1\104\1\44"+
    "\1\32\1\45\1\73\3\0\1\73\2\0\2\73\1\0"+
    "\3\105\2\0\1\106\1\107\2\0\1\110\6\0\1\111"+
    "\3\0\1\111\21\0\2\111\12\0\3\112\2\0\1\113"+
    "\1\114\2\0\1\115\6\0\1\116\3\0\1\116\21\0"+
    "\2\116\12\0\3\117\2\120\2\25\1\121\1\0\1\122"+
    "\1\123\1\120\14\0\1\123\12\0\1\120\1\124\2\120"+
    "\13\0\3\117\2\120\2\25\2\0\1\122\1\123\1\120"+
    "\14\0\1\123\12\0\1\120\1\124\2\120\13\0\3\125"+
    "\2\0\4\26\1\0\1\26\2\0\3\26\1\0\3\26"+
    "\1\0\1\126\15\26\1\0\1\26\3\0\1\26\1\126"+
    "\2\0\2\26\1\126\2\26\6\0\2\122\53\0\3\127"+
    "\2\0\1\130\1\131\2\0\1\132\6\0\1\133\3\0"+
    "\1\133\21\0\2\133\12\0\3\125\2\0\4\26\1\0"+
    "\1\26\2\0\1\26\1\134\1\26\1\0\3\26\1\0"+
    "\1\126\15\26\1\0\1\26\3\0\1\26\1\126\2\0"+
    "\2\26\1\126\2\26\10\0\2\135\1\0\1\135\2\0"+
    "\3\135\1\0\3\135\2\0\15\135\1\0\1\135\3\0"+
    "\1\135\3\0\1\135\2\0\2\135\1\0\3\125\2\0"+
    "\4\26\1\0\1\26\2\0\3\26\1\0\1\26\1\136"+
    "\1\26\1\0\1\126\5\26\1\137\7\26\1\0\1\26"+
    "\3\0\1\26\1\126\2\0\2\26\1\126\2\26\1\0"+
    "\3\125\2\0\4\26\1\0\1\26\2\0\3\26\1\0"+
    "\3\26\1\0\1\126\1\26\1\140\7\26\1\141\3\26"+
    "\1\0\1\26\3\0\1\26\1\126\2\0\2\26\1\126"+
    "\2\26\1\0\3\125\2\0\4\26\1\0\1\26\2\0"+
    "\3\26\1\0\3\26\1\0\1\126\1\142\14\26\1\0"+
    "\1\26\3\0\1\26\1\126\2\0\2\26\1\126\2\26"+
    "\1\0\3\125\2\0\4\26\1\0\1\26\2\0\3\26"+
    "\1\0\2\26\1\143\1\0\1\126\15\26\1\0\1\26"+
    "\3\0\1\26\1\126\2\0\2\26\1\126\2\26\1\0"+
    "\3\125\2\0\4\26\1\0\1\26\2\0\3\26\1\0"+
    "\3\26\1\0\1\126\1\144\14\26\1\0\1\26\3\0"+
    "\1\26\1\126\2\0\2\26\1\126\2\26\1\0\3\125"+
    "\2\0\4\26\1\0\1\26\2\0\3\26\1\0\3\26"+
    "\1\0\1\126\3\26\1\145\11\26\1\0\1\26\3\0"+
    "\1\26\1\126\2\0\2\26\1\126\2\26\1\0\3\125"+
    "\2\0\4\26\1\0\1\26\2\0\3\26\1\0\1\26"+
    "\1\146\1\26\1\0\1\126\2\26\1\147\12\26\1\0"+
    "\1\26\3\0\1\26\1\126\2\0\2\26\1\126\2\26"+
    "\1\0\3\150\2\0\1\151\1\152\2\0\1\153\6\0"+
    "\1\154\3\0\1\154\21\0\2\154\12\0\3\125\2\0"+
    "\4\26\1\0\1\26\2\0\3\26\1\0\3\26\1\0"+
    "\1\126\1\26\1\155\13\26\1\0\1\26\3\0\1\26"+
    "\1\126\2\0\2\26\1\126\2\26\1\0\3\156\2\0"+
    "\1\157\1\160\2\0\1\161\6\0\1\162\3\0\1\162"+
    "\21\0\2\162\12\0\3\163\4\0\2\135\1\0\1\135"+
    "\2\0\3\135\1\0\3\135\2\0\15\135\1\0\1\135"+
    "\3\0\1\135\3\0\1\135\2\0\2\135\1\46\1\164"+
    "\1\165\57\46\5\47\1\166\54\47\6\0\1\167\1\170"+
    "\1\0\1\170\1\0\1\170\6\0\2\170\3\0\1\170"+
    "\1\0\1\170\4\0\1\170\2\0\1\170\24\0\1\22"+
    "\1\23\2\52\3\0\1\53\1\30\14\0\1\53\12\0"+
    "\1\42\1\54\1\44\21\0\2\171\4\0\1\172\27\0"+
    "\1\172\45\0\1\173\32\0\3\55\4\0\2\174\1\0"+
    "\1\174\2\0\3\174\1\56\3\174\1\56\1\0\15\174"+
    "\1\0\1\174\1\0\2\56\1\174\3\0\1\174\2\0"+
    "\2\174\10\0\2\174\1\0\1\174\2\0\3\174\1\0"+
    "\3\174\2\0\15\174\1\0\1\174\3\0\1\174\3\0"+
    "\1\174\2\0\2\174\1\0\3\163\4\0\2\174\1\0"+
    "\1\174\2\0\3\174\1\0\3\174\2\0\15\174\1\0"+
    "\1\174\3\0\1\174\3\0\1\174\2\0\2\174\41\0"+
    "\1\175\21\0\3\163\57\0\3\62\47\0\1\63\6\0"+
    "\1\62\2\63\1\64\2\62\1\65\1\66\2\62\1\70"+
    "\2\62\1\0\34\62\1\71\10\62\3\64\2\62\1\65"+
    "\1\66\2\62\1\70\2\62\1\0\34\62\1\71\1\64"+
    "\6\62\1\0\3\62\2\0\2\66\1\176\1\0\1\177"+
    "\1\200\15\0\1\200\21\0\1\63\7\0\3\62\2\0"+
    "\2\66\2\0\1\177\1\200\15\0\1\200\21\0\1\63"+
    "\7\0\3\201\2\0\4\26\1\0\1\26\2\0\3\26"+
    "\1\0\3\26\1\0\1\126\15\26\1\0\1\26\3\0"+
    "\1\26\1\126\1\63\1\0\2\26\1\126\2\26\1\0"+
    "\3\62\2\0\2\177\43\0\1\63\7\0\3\202\2\0"+
    "\4\73\1\0\1\73\2\0\3\73\1\0\3\73\1\0"+
    "\1\203\15\73\1\0\1\73\3\0\1\73\1\203\2\0"+
    "\2\73\1\203\2\73\1\0\3\202\2\0\4\73\1\0"+
    "\1\73\2\0\1\73\1\204\1\73\1\0\3\73\1\0"+
    "\1\203\15\73\1\0\1\73\3\0\1\73\1\203\2\0"+
    "\2\73\1\203\2\73\1\0\3\202\2\0\4\73\1\0"+
    "\1\73\2\0\3\73\1\0\1\73\1\205\1\73\1\0"+
    "\1\203\5\73\1\206\7\73\1\0\1\73\3\0\1\73"+
    "\1\203\2\0\2\73\1\203\2\73\1\0\3\202\2\0"+
    "\4\73\1\0\1\73\2\0\3\73\1\0\3\73\1\0"+
    "\1\203\1\73\1\207\7\73\1\210\3\73\1\0\1\73"+
    "\3\0\1\73\1\203\2\0\2\73\1\203\2\73\1\0"+
    "\3\202\2\0\4\73\1\0\1\73\2\0\3\73\1\0"+
    "\3\73\1\0\1\203\1\211\14\73\1\0\1\73\3\0"+
    "\1\73\1\203\2\0\2\73\1\203\2\73\1\0\3\202"+
    "\2\0\4\73\1\0\1\73\2\0\3\73\1\0\2\73"+
    "\1\212\1\0\1\203\15\73\1\0\1\73\3\0\1\73"+
    "\1\203\2\0\2\73\1\203\2\73\1\0\3\202\2\0"+
    "\4\73\1\0\1\73\2\0\3\73\1\0\3\73\1\0"+
    "\1\203\1\213\14\73\1\0\1\73\3\0\1\73\1\203"+
    "\2\0\2\73\1\203\2\73\1\0\3\202\2\0\4\73"+
    "\1\0\1\73\2\0\3\73\1\0\3\73\1\0\1\203"+
    "\3\73\1\214\11\73\1\0\1\73\3\0\1\73\1\203"+
    "\2\0\2\73\1\203\2\73\1\0\3\202\2\0\4\73"+
    "\1\0\1\73\2\0\3\73\1\0\1\73\1\215\1\73"+
    "\1\0\1\203\2\73\1\216\12\73\1\0\1\73\3\0"+
    "\1\73\1\203\2\0\2\73\1\203\2\73\1\0\3\202"+
    "\2\0\4\73\1\0\1\73\2\0\3\73\1\0\3\73"+
    "\1\0\1\203\1\73\1\217\13\73\1\0\1\73\3\0"+
    "\1\73\1\203\2\0\2\73\1\203\2\73\1\0\3\105"+
    "\4\0\2\220\1\0\1\220\2\0\3\220\1\0\3\220"+
    "\2\0\15\220\1\0\1\220\3\0\1\220\3\0\1\220"+
    "\2\0\2\220\6\0\2\107\1\221\1\0\1\222\1\223"+
    "\15\0\1\223\36\0\2\107\2\0\1\222\1\223\15\0"+
    "\1\223\36\0\2\222\62\0\2\220\1\0\1\220\2\0"+
    "\3\220\1\0\3\220\2\0\15\220\1\0\1\220\3\0"+
    "\1\220\3\0\1\220\2\0\2\220\1\0\3\112\4\0"+
    "\2\224\1\0\1\224\2\0\3\224\1\0\3\224\2\0"+
    "\15\224\1\0\1\224\3\0\1\224\3\0\1\224\2\0"+
    "\2\224\6\0\2\114\1\225\1\0\1\226\1\227\15\0"+
    "\1\227\36\0\2\114\2\0\1\226\1\227\15\0\1\227"+
    "\36\0\2\226\62\0\2\224\1\0\1\224\2\0\3\224"+
    "\1\0\3\224\2\0\15\224\1\0\1\224\3\0\1\224"+
    "\3\0\1\224\2\0\2\224\1\0\3\117\64\0\1\230"+
    "\1\231\1\0\1\231\1\0\1\231\6\0\2\231\3\0"+
    "\1\231\1\0\1\231\4\0\1\231\2\0\1\231\21\0"+
    "\3\117\2\120\2\122\3\0\1\123\1\120\14\0\1\123"+
    "\12\0\1\120\1\124\2\120\20\0\2\232\4\0\1\233"+
    "\27\0\1\233\45\0\1\234\32\0\3\125\1\22\1\23"+
    "\6\0\1\30\27\0\1\42\1\54\1\44\17\0\1\22"+
    "\1\23\6\0\1\30\27\0\1\42\1\54\1\44\14\0"+
    "\3\127\4\0\2\235\1\0\1\235\2\0\3\235\1\0"+
    "\3\235\2\0\15\235\1\0\1\235\3\0\1\235\3\0"+
    "\1\235\2\0\2\235\6\0\2\131\1\236\1\0\1\237"+
    "\1\240\15\0\1\240\36\0\2\131\2\0\1\237\1\240"+
    "\15\0\1\240\36\0\2\237\62\0\2\235\1\0\1\235"+
    "\2\0\3\235\1\0\3\235\2\0\15\235\1\0\1\235"+
    "\3\0\1\235\3\0\1\235\2\0\2\235\1\0\3\125"+
    "\2\0\4\26\1\0\1\26\2\0\2\26\1\241\1\0"+
    "\3\26\1\0\1\126\15\26\1\0\1\26\3\0\1\26"+
    "\1\126\2\0\2\26\1\126\2\26\1\0\3\242\2\0"+
    "\4\135\1\0\1\135\2\0\3\135\1\0\3\135\1\0"+
    "\1\242\15\135\1\0\1\135\3\0\1\135\1\242\2\0"+
    "\2\135\1\242\2\135\1\0\3\125\2\0\4\26\1\0"+
    "\1\26\2\0\1\243\2\26\1\0\3\26\1\0\1\126"+
    "\15\26\1\0\1\26\3\0\1\26\1\126\2\0\2\26"+
    "\1\126\2\26\1\0\3\125\2\0\4\26\1\0\1\26"+
    "\2\0\3\26\1\0\1\26\1\244\1\26\1\0\1\126"+
    "\15\26\1\0\1\26\3\0\1\26\1\126\2\0\2\26"+
    "\1\126\2\26\1\0\3\125\2\0\4\26\1\0\1\26"+
    "\2\0\1\26\1\245\1\26\1\0\3\26\1\0\1\126"+
    "\15\26\1\0\1\26\3\0\1\26\1\126\2\0\2\26"+
    "\1\126\2\26\1\0\3\125\2\0\4\26\1\0\1\26"+
    "\2\0\3\26\1\0\3\26\1\0\1\126\13\26\1\246"+
    "\1\26\1\0\1\26\3\0\1\26\1\126\2\0\2\26"+
    "\1\126\2\26\1\0\3\247\2\0\4\26\1\0\1\26"+
    "\2\0\3\26\1\0\3\26\1\0\1\126\15\26\1\0"+
    "\1\26\3\0\1\26\1\126\2\0\2\26\1\126\2\26"+
    "\1\0\3\125\2\0\4\26\1\0\1\26\2\0\3\26"+
    "\1\0\3\26\1\0\1\126\4\26\1\250\10\26\1\0"+
    "\1\26\3\0\1\26\1\126\2\0\2\26\1\126\2\26"+
    "\1\0\3\251\2\0\4\26\1\0\1\26\2\0\3\26"+
    "\1\0\3\26\1\252\1\126\15\26\1\0\1\26\3\0"+
    "\1\26\1\126\2\0\2\26\1\126\2\26\1\0\3\125"+
    "\2\0\4\26\1\0\1\26\2\0\3\26\1\0\3\26"+
    "\1\0\1\126\4\26\1\253\10\26\1\0\1\26\3\0"+
    "\1\26\1\126\2\0\2\26\1\126\2\26\1\0\3\125"+
    "\2\0\4\26\1\0\1\26\2\0\3\26\1\0\3\26"+
    "\1\0\1\126\6\26\1\254\6\26\1\0\1\26\3\0"+
    "\1\26\1\126\2\0\2\26\1\126\2\26\1\0\3\125"+
    "\2\0\4\26\1\0\1\26\2\0\3\26\1\0\2\26"+
    "\1\255\1\0\1\126\15\26\1\0\1\26\3\0\1\26"+
    "\1\126\2\0\2\26\1\126\2\26\1\0\3\150\4\0"+
    "\2\256\1\0\1\256\2\0\3\256\1\0\3\256\2\0"+
    "\15\256\1\0\1\256\3\0\1\256\3\0\1\256\2\0"+
    "\2\256\6\0\2\152\1\257\1\0\1\260\1\261\15\0"+
    "\1\261\36\0\2\152\2\0\1\260\1\261\15\0\1\261"+
    "\36\0\2\260\62\0\2\256\1\0\1\256\2\0\3\256"+
    "\1\0\3\256\2\0\15\256\1\0\1\256\3\0\1\256"+
    "\3\0\1\256\2\0\2\256\1\0\3\125\2\0\4\26"+
    "\1\0\1\26\2\0\3\26\1\0\3\26\1\0\1\126"+
    "\12\26\1\262\2\26\1\0\1\26\3\0\1\26\1\126"+
    "\2\0\2\26\1\126\2\26\1\0\3\156\4\0\2\263"+
    "\1\0\1\263\2\0\3\263\1\0\3\263\2\0\15\263"+
    "\1\0\1\263\3\0\1\263\3\0\1\263\2\0\2\263"+
    "\6\0\2\160\1\264\1\0\1\265\1\266\15\0\1\266"+
    "\36\0\2\160\2\0\1\265\1\266\15\0\1\266\36\0"+
    "\2\265\62\0\2\263\1\0\1\263\2\0\3\263\1\0"+
    "\3\263\2\0\15\263\1\0\1\263\3\0\1\263\3\0"+
    "\1\263\2\0\2\263\1\0\3\163\25\0\1\267\32\0"+
    "\1\165\57\0\4\47\1\165\1\166\54\47\4\0\1\22"+
    "\1\23\1\167\1\170\1\0\1\170\1\0\1\170\1\30"+
    "\5\0\2\170\3\0\1\170\1\0\1\170\4\0\1\170"+
    "\2\0\1\170\2\0\1\42\1\54\1\44\17\0\1\22"+
    "\1\23\2\270\1\0\1\270\1\0\1\270\1\30\5\0"+
    "\2\270\3\0\1\270\1\0\1\270\4\0\1\270\2\0"+
    "\1\270\2\0\1\42\1\54\1\44\17\0\1\22\1\23"+
    "\2\171\4\0\1\30\27\0\1\42\1\54\1\44\21\0"+
    "\2\171\113\0\1\22\21\0\3\271\2\0\4\174\1\0"+
    "\1\174\2\0\3\174\1\0\3\174\1\0\1\271\15\174"+
    "\1\0\1\174\3\0\1\174\1\271\2\0\2\174\1\271"+
    "\2\174\6\0\1\272\1\273\1\0\1\273\1\0\1\273"+
    "\6\0\2\273\3\0\1\273\1\0\1\273\4\0\1\273"+
    "\2\0\1\273\21\0\3\62\2\0\2\177\3\0\1\200"+
    "\15\0\1\200\21\0\1\63\14\0\2\274\4\0\1\275"+
    "\27\0\1\275\16\0\3\201\1\22\1\23\6\0\1\30"+
    "\27\0\1\42\1\54\1\44\4\0\1\63\7\0\3\202"+
    "\1\22\1\23\6\0\1\30\10\0\1\276\16\0\1\42"+
    "\1\54\1\44\14\0\3\242\1\22\1\23\6\0\1\30"+
    "\10\0\1\276\16\0\1\42\1\54\1\44\14\0\3\202"+
    "\2\0\4\73\1\0\1\73\2\0\2\73\1\277\1\0"+
    "\3\73\1\0\1\203\15\73\1\0\1\73\3\0\1\73"+
    "\1\203\2\0\2\73\1\203\2\73\1\0\3\202\2\0"+
    "\4\73\1\0\1\73\2\0\1\300\2\73\1\0\3\73"+
    "\1\0\1\203\15\73\1\0\1\73\3\0\1\73\1\203"+
    "\2\0\2\73\1\203\2\73\1\0\3\202\2\0\4\73"+
    "\1\0\1\73\2\0\3\73\1\0\1\73\1\301\1\73"+
    "\1\0\1\203\15\73\1\0\1\73\3\0\1\73\1\203"+
    "\2\0\2\73\1\203\2\73\1\0\3\202\2\0\4\73"+
    "\1\0\1\73\2\0\1\73\1\302\1\73\1\0\3\73"+
    "\1\0\1\203\15\73\1\0\1\73\3\0\1\73\1\203"+
    "\2\0\2\73\1\203\2\73\1\0\3\202\2\0\4\73"+
    "\1\0\1\73\2\0\3\73\1\0\3\73\1\0\1\203"+
    "\13\73\1\303\1\73\1\0\1\73\3\0\1\73\1\203"+
    "\2\0\2\73\1\203\2\73\1\0\3\304\2\0\4\73"+
    "\1\0\1\73\2\0\3\73\1\0\3\73\1\0\1\203"+
    "\15\73\1\0\1\73\3\0\1\73\1\203\2\0\2\73"+
    "\1\203\2\73\1\0\3\202\2\0\4\73\1\0\1\73"+
    "\2\0\3\73\1\0\3\73\1\0\1\203\4\73\1\305"+
    "\10\73\1\0\1\73\3\0\1\73\1\203\2\0\2\73"+
    "\1\203\2\73\1\0\3\306\2\0\4\73\1\0\1\73"+
    "\2\0\3\73\1\0\3\73\1\252\1\203\15\73\1\0"+
    "\1\73\3\0\1\73\1\203\2\0\2\73\1\203\2\73"+
    "\1\0\3\202\2\0\4\73\1\0\1\73\2\0\3\73"+
    "\1\0\3\73\1\0\1\203\4\73\1\307\10\73\1\0"+
    "\1\73\3\0\1\73\1\203\2\0\2\73\1\203\2\73"+
    "\1\0\3\202\2\0\4\73\1\0\1\73\2\0\3\73"+
    "\1\0\3\73\1\0\1\203\6\73\1\310\6\73\1\0"+
    "\1\73\3\0\1\73\1\203\2\0\2\73\1\203\2\73"+
    "\1\0\3\202\2\0\4\73\1\0\1\73\2\0\3\73"+
    "\1\0\2\73\1\311\1\0\1\203\15\73\1\0\1\73"+
    "\3\0\1\73\1\203\2\0\2\73\1\203\2\73\1\0"+
    "\3\202\2\0\4\73\1\0\1\73\2\0\3\73\1\0"+
    "\3\73\1\0\1\203\12\73\1\312\2\73\1\0\1\73"+
    "\3\0\1\73\1\203\2\0\2\73\1\203\2\73\1\0"+
    "\3\313\2\0\4\220\1\0\1\220\2\0\3\220\1\0"+
    "\3\220\1\0\1\314\15\220\1\0\1\220\3\0\1\220"+
    "\1\314\2\0\2\220\1\314\2\220\6\0\1\315\1\316"+
    "\1\0\1\316\1\0\1\316\6\0\2\316\3\0\1\316"+
    "\1\0\1\316\4\0\1\316\2\0\1\316\26\0\2\222"+
    "\3\0\1\223\15\0\1\223\36\0\2\317\4\0\1\320"+
    "\27\0\1\320\16\0\3\321\2\0\4\224\1\0\1\224"+
    "\2\0\3\224\1\0\3\224\1\0\1\322\15\224\1\0"+
    "\1\224\3\0\1\224\1\322\2\0\2\224\1\322\2\224"+
    "\6\0\1\323\1\324\1\0\1\324\1\0\1\324\6\0"+
    "\2\324\3\0\1\324\1\0\1\324\4\0\1\324\2\0"+
    "\1\324\26\0\2\226\3\0\1\227\15\0\1\227\36\0"+
    "\2\325\4\0\1\326\27\0\1\326\16\0\3\117\2\120"+
    "\1\230\1\231\1\0\1\231\1\0\1\231\1\120\5\0"+
    "\2\231\3\0\1\231\1\0\1\231\4\0\1\231\2\0"+
    "\1\231\2\0\1\120\1\124\2\120\13\0\3\117\2\120"+
    "\2\327\1\0\1\327\1\0\1\327\1\120\5\0\2\327"+
    "\3\0\1\327\1\0\1\327\4\0\1\327\2\0\1\327"+
    "\2\0\1\120\1\124\2\120\13\0\3\117\2\120\2\232"+
    "\4\0\1\120\27\0\1\120\1\124\2\120\20\0\2\232"+
    "\113\0\1\120\21\0\3\330\2\0\4\235\1\0\1\235"+
    "\2\0\3\235\1\0\3\235\1\0\1\331\15\235\1\0"+
    "\1\235\3\0\1\235\1\331\2\0\2\235\1\331\2\235"+
    "\6\0\1\332\1\333\1\0\1\333\1\0\1\333\6\0"+
    "\2\333\3\0\1\333\1\0\1\333\4\0\1\333\2\0"+
    "\1\333\26\0\2\237\3\0\1\240\15\0\1\240\36\0"+
    "\2\334\4\0\1\335\27\0\1\335\16\0\3\336\2\0"+
    "\4\26\1\0\1\26\2\0\3\26\1\337\3\26\1\0"+
    "\1\126\15\26\1\0\1\26\3\0\1\26\1\126\2\0"+
    "\2\26\1\126\2\26\1\0\3\242\21\0\1\276\35\0"+
    "\3\125\2\0\4\26\1\0\1\26\2\0\3\26\1\0"+
    "\1\340\2\26\1\0\1\126\15\26\1\0\1\26\3\0"+
    "\1\26\1\126\2\0\2\26\1\126\2\26\1\0\3\125"+
    "\2\0\4\26\1\0\1\26\2\0\3\26\1\0\3\26"+
    "\1\0\1\126\6\26\1\341\6\26\1\0\1\26\3\0"+
    "\1\26\1\126\2\0\2\26\1\126\2\26\1\0\3\342"+
    "\2\0\4\26\1\0\1\26\2\0\3\26\1\0\3\26"+
    "\1\343\1\126\2\26\1\344\12\26\1\0\1\26\3\0"+
    "\1\26\1\126\2\0\2\26\1\126\2\26\1\0\3\125"+
    "\2\0\4\26\1\0\1\26\2\0\3\26\1\0\1\345"+
    "\2\26\1\0\1\126\15\26\1\0\1\26\3\0\1\26"+
    "\1\126\2\0\2\26\1\126\2\26\1\0\3\247\1\22"+
    "\1\23\6\0\1\30\5\0\1\346\10\0\1\347\10\0"+
    "\1\42\1\54\1\44\14\0\3\125\2\0\4\26\1\0"+
    "\1\26\2\0\3\26\1\0\3\26\1\0\1\126\5\26"+
    "\1\350\7\26\1\0\1\26\3\0\1\26\1\126\2\0"+
    "\2\26\1\126\2\26\1\0\3\251\1\22\1\23\6\0"+
    "\1\30\10\0\1\252\16\0\1\42\1\54\1\44\14\0"+
    "\3\252\57\0\3\125\2\0\4\26\1\0\1\26\2\0"+
    "\1\351\2\26\1\0\3\26\1\0\1\126\15\26\1\0"+
    "\1\26\3\0\1\26\1\126\2\0\2\26\1\126\2\26"+
    "\1\0\3\125\2\0\4\26\1\0\1\26\2\0\3\26"+
    "\1\0\3\26\1\0\1\126\2\26\1\352\12\26\1\0"+
    "\1\26\3\0\1\26\1\126\2\0\2\26\1\126\2\26"+
    "\1\0\3\125\2\0\4\26\1\0\1\26\2\0\3\26"+
    "\1\0\1\26\1\353\1\26\1\0\1\126\15\26\1\0"+
    "\1\26\3\0\1\26\1\126\2\0\2\26\1\126\2\26"+
    "\1\0\3\354\2\0\4\256\1\0\1\256\2\0\3\256"+
    "\1\0\3\256\1\0\1\355\15\256\1\0\1\256\3\0"+
    "\1\256\1\355\2\0\2\256\1\355\2\256\6\0\1\356"+
    "\1\357\1\0\1\357\1\0\1\357\6\0\2\357\3\0"+
    "\1\357\1\0\1\357\4\0\1\357\2\0\1\357\26\0"+
    "\2\260\3\0\1\261\15\0\1\261\36\0\2\360\4\0"+
    "\1\361\27\0\1\361\16\0\3\362\2\0\1\363\1\364"+
    "\2\26\1\110\1\26\2\0\3\26\1\111\3\26\1\111"+
    "\1\126\15\26\1\0\1\26\1\0\2\111\1\26\1\126"+
    "\2\0\2\26\1\126\2\26\1\0\3\365\2\0\4\263"+
    "\1\0\1\263\2\0\3\263\1\0\3\263\1\0\1\366"+
    "\15\263\1\0\1\263\3\0\1\263\1\366\2\0\2\263"+
    "\1\366\2\263\6\0\1\367\1\370\1\0\1\370\1\0"+
    "\1\370\6\0\2\370\3\0\1\370\1\0\1\370\4\0"+
    "\1\370\2\0\1\370\26\0\2\265\3\0\1\266\15\0"+
    "\1\266\36\0\2\371\4\0\1\372\27\0\1\372\62\0"+
    "\1\373\20\0\1\22\1\23\2\374\1\0\1\374\1\0"+
    "\1\374\1\30\5\0\2\374\3\0\1\374\1\0\1\374"+
    "\4\0\1\374\2\0\1\374\2\0\1\42\1\54\1\44"+
    "\14\0\3\271\22\0\1\375\24\0\1\376\1\377\6\0"+
    "\3\62\2\0\1\272\1\273\1\0\1\273\1\0\1\273"+
    "\6\0\2\273\3\0\1\273\1\0\1\273\4\0\1\273"+
    "\2\0\1\273\11\0\1\63\7\0\3\62\2\0\2\u0100"+
    "\1\0\1\u0100\1\0\1\u0100\6\0\2\u0100\3\0\1\u0100"+
    "\1\0\1\u0100\4\0\1\u0100\2\0\1\u0100\11\0\1\63"+
    "\7\0\3\62\2\0\2\274\43\0\1\63\14\0\2\274"+
    "\53\0\3\u0101\15\0\1\u0102\3\0\1\u0102\21\0\2\u0102"+
    "\12\0\3\u0103\2\0\4\73\1\0\1\73\2\0\3\73"+
    "\1\337\3\73\1\0\1\203\15\73\1\0\1\73\3\0"+
    "\1\73\1\203\2\0\2\73\1\203\2\73\1\0\3\202"+
    "\2\0\4\73\1\0\1\73\2\0\3\73\1\0\1\u0104"+
    "\2\73\1\0\1\203\15\73\1\0\1\73\3\0\1\73"+
    "\1\203\2\0\2\73\1\203\2\73\1\0\3\202\2\0"+
    "\4\73\1\0\1\73\2\0\3\73\1\0\3\73\1\0"+
    "\1\203\6\73\1\u0105\6\73\1\0\1\73\3\0\1\73"+
    "\1\203\2\0\2\73\1\203\2\73\1\0\3\u0106\2\0"+
    "\4\73\1\0\1\73\2\0\3\73\1\0\3\73\1\343"+
    "\1\203\2\73\1\u0107\12\73\1\0\1\73\3\0\1\73"+
    "\1\203\2\0\2\73\1\203\2\73\1\0\3\202\2\0"+
    "\4\73\1\0\1\73\2\0\3\73\1\0\1\u0108\2\73"+
    "\1\0\1\203\15\73\1\0\1\73\3\0\1\73\1\203"+
    "\2\0\2\73\1\203\2\73\1\0\3\304\1\22\1\23"+
    "\6\0\1\30\5\0\1\346\2\0\1\276\5\0\1\347"+
    "\10\0\1\42\1\54\1\44\14\0\3\202\2\0\4\73"+
    "\1\0\1\73\2\0\3\73\1\0\3\73\1\0\1\203"+
    "\5\73\1\u0109\7\73\1\0\1\73\3\0\1\73\1\203"+
    "\2\0\2\73\1\203\2\73\1\0\3\306\1\22\1\23"+
    "\6\0\1\30\10\0\1\u010a\16\0\1\42\1\54\1\44"+
    "\14\0\3\202\2\0\4\73\1\0\1\73\2\0\1\u010b"+
    "\2\73\1\0\3\73\1\0\1\203\15\73\1\0\1\73"+
    "\3\0\1\73\1\203\2\0\2\73\1\203\2\73\1\0"+
    "\3\202\2\0\4\73\1\0\1\73\2\0\3\73\1\0"+
    "\3\73\1\0\1\203\2\73\1\u010c\12\73\1\0\1\73"+
    "\3\0\1\73\1\203\2\0\2\73\1\203\2\73\1\0"+
    "\3\202\2\0\4\73\1\0\1\73\2\0\3\73\1\0"+
    "\1\73\1\u010d\1\73\1\0\1\203\15\73\1\0\1\73"+
    "\3\0\1\73\1\203\2\0\2\73\1\203\2\73\1\0"+
    "\3\u010e\2\0\1\u010f\1\u0110\2\73\1\110\1\73\2\0"+
    "\3\73\1\111\3\73\1\111\1\203\15\73\1\0\1\73"+
    "\1\0\2\111\1\73\1\203\2\0\2\73\1\203\2\73"+
    "\1\0\3\313\64\0\2\u0111\1\0\1\u0111\1\0\1\u0111"+
    "\6\0\2\u0111\3\0\1\u0111\1\0\1\u0111\4\0\1\u0111"+
    "\2\0\1\u0111\26\0\2\317\53\0\3\321\64\0\2\u0112"+
    "\1\0\1\u0112\1\0\1\u0112\6\0\2\u0112\3\0\1\u0112"+
    "\1\0\1\u0112\4\0\1\u0112\2\0\1\u0112\26\0\2\325"+
    "\53\0\3\117\2\120\2\u0113\1\0\1\u0113\1\0\1\u0113"+
    "\1\120\5\0\2\u0113\3\0\1\u0113\1\0\1\u0113\4\0"+
    "\1\u0113\2\0\1\u0113\2\0\1\120\1\124\2\120\13\0"+
    "\3\330\64\0\2\u0114\1\0\1\u0114\1\0\1\u0114\6\0"+
    "\2\u0114\3\0\1\u0114\1\0\1\u0114\4\0\1\u0114\2\0"+
    "\1\u0114\26\0\2\334\53\0\3\336\1\22\1\23\6\0"+
    "\1\30\4\0\1\337\22\0\1\42\1\54\1\44\14\0"+
    "\3\125\2\0\4\26\1\0\1\26\2\0\3\26\1\0"+
    "\2\26\1\u0115\1\0\1\126\15\26\1\0\1\26\3\0"+
    "\1\26\1\126\2\0\2\26\1\126\2\26\1\0\3\125"+
    "\2\0\4\26\1\0\1\26\2\0\3\26\1\0\3\26"+
    "\1\0\1\126\6\26\1\u0116\6\26\1\0\1\26\3\0"+
    "\1\26\1\126\2\0\2\26\1\126\2\26\1\0\3\342"+
    "\1\22\1\23\6\0\1\30\10\0\1\343\16\0\1\42"+
    "\1\54\1\44\14\0\3\343\57\0\3\125\2\0\4\26"+
    "\1\0\1\26\2\0\3\26\1\0\1\26\1\u0117\1\26"+
    "\1\0\1\126\15\26\1\0\1\26\3\0\1\26\1\126"+
    "\2\0\2\26\1\126\2\26\1\0\3\125\2\0\4\26"+
    "\1\0\1\26\2\0\1\u0118\2\26\1\0\3\26\1\0"+
    "\1\126\15\26\1\0\1\26\3\0\1\26\1\126\2\0"+
    "\2\26\1\126\2\26\34\0\1\u0119\67\0\1\u011a\20\0"+
    "\3\125\2\0\4\26\1\0\1\26\2\0\3\26\1\0"+
    "\3\26\1\0\1\126\2\26\1\u011b\12\26\1\0\1\26"+
    "\3\0\1\26\1\126\2\0\2\26\1\126\2\26\1\0"+
    "\3\125\2\0\4\26\1\0\1\26\2\0\3\26\1\0"+
    "\1\u011c\2\26\1\0\1\126\15\26\1\0\1\26\3\0"+
    "\1\26\1\126\2\0\2\26\1\126\2\26\1\0\3\125"+
    "\2\0\4\26\1\0\1\26\2\0\3\26\1\0\3\26"+
    "\1\0\1\126\12\26\1\u011d\2\26\1\0\1\26\3\0"+
    "\1\26\1\126\2\0\2\26\1\126\2\26\1\0\3\125"+
    "\2\0\4\26\1\0\1\26\2\0\3\26\1\0\3\26"+
    "\1\0\1\126\10\26\1\u011e\4\26\1\0\1\26\3\0"+
    "\1\26\1\126\2\0\2\26\1\126\2\26\1\0\3\354"+
    "\64\0\2\u011f\1\0\1\u011f\1\0\1\u011f\6\0\2\u011f"+
    "\3\0\1\u011f\1\0\1\u011f\4\0\1\u011f\2\0\1\u011f"+
    "\26\0\2\360\53\0\3\362\1\22\1\23\2\0\2\220"+
    "\1\0\1\220\1\30\1\0\3\220\1\0\3\220\2\0"+
    "\15\220\1\42\1\u0120\1\44\2\0\1\220\3\0\1\220"+
    "\2\0\2\220\1\0\3\125\2\0\2\364\1\u0121\1\26"+
    "\1\222\1\u0122\2\0\3\26\1\0\3\26\1\0\1\126"+
    "\2\26\1\u0122\12\26\1\0\1\26\3\0\1\26\1\126"+
    "\2\0\2\26\1\126\2\26\1\0\3\125\2\0\2\364"+
    "\2\26\1\222\1\u0122\2\0\3\26\1\0\3\26\1\0"+
    "\1\126\2\26\1\u0122\12\26\1\0\1\26\3\0\1\26"+
    "\1\126\2\0\2\26\1\126\2\26\1\0\3\365\64\0"+
    "\2\u0123\1\0\1\u0123\1\0\1\u0123\6\0\2\u0123\3\0"+
    "\1\u0123\1\0\1\u0123\4\0\1\u0123\2\0\1\u0123\26\0"+
    "\2\371\123\0\1\u0124\14\0\1\22\1\23\2\u0125\1\0"+
    "\1\u0125\1\0\1\u0125\1\30\5\0\2\u0125\3\0\1\u0125"+
    "\1\0\1\u0125\4\0\1\u0125\2\0\1\u0125\2\0\1\42"+
    "\1\54\1\44\14\0\3\375\15\0\1\u0126\41\0\3\u0127"+
    "\15\0\1\u0128\3\0\1\u0128\21\0\2\u0128\12\0\3\u0129"+
    "\15\0\1\u012a\3\0\1\u012a\21\0\2\u012a\12\0\3\62"+
    "\2\0\2\u012b\1\0\1\u012b\1\0\1\u012b\6\0\2\u012b"+
    "\3\0\1\u012b\1\0\1\u012b\4\0\1\u012b\2\0\1\u012b"+
    "\11\0\1\63\7\0\3\u0101\4\0\2\u012c\1\0\1\u012c"+
    "\2\0\3\u012c\1\u0102\3\u012c\1\u0102\1\0\15\u012c\1\0"+
    "\1\u012c\1\0\2\u0102\1\u012c\3\0\1\u012c\2\0\2\u012c"+
    "\10\0\2\u012c\1\0\1\u012c\2\0\3\u012c\1\0\3\u012c"+
    "\2\0\15\u012c\1\0\1\u012c\3\0\1\u012c\3\0\1\u012c"+
    "\2\0\2\u012c\1\0\3\u0103\1\22\1\23\6\0\1\30"+
    "\4\0\1\337\3\0\1\276\16\0\1\42\1\54\1\44"+
    "\14\0\3\202\2\0\4\73\1\0\1\73\2\0\3\73"+
    "\1\0\2\73\1\u012d\1\0\1\203\15\73\1\0\1\73"+
    "\3\0\1\73\1\203\2\0\2\73\1\203\2\73\1\0"+
    "\3\202\2\0\4\73\1\0\1\73\2\0\3\73\1\0"+
    "\3\73\1\0\1\203\6\73\1\u012e\6\73\1\0\1\73"+
    "\3\0\1\73\1\203\2\0\2\73\1\203\2\73\1\0"+
    "\3\u0106\1\22\1\23\6\0\1\30\10\0\1\u012f\16\0"+
    "\1\42\1\54\1\44\14\0\3\202\2\0\4\73\1\0"+
    "\1\73\2\0\3\73\1\0\1\73\1\u0130\1\73\1\0"+
    "\1\203\15\73\1\0\1\73\3\0\1\73\1\203\2\0"+
    "\2\73\1\203\2\73\1\0\3\202\2\0\4\73\1\0"+
    "\1\73\2\0\1\u0131\2\73\1\0\3\73\1\0\1\203"+
    "\15\73\1\0\1\73\3\0\1\73\1\203\2\0\2\73"+
    "\1\203\2\73\1\0\3\202\2\0\4\73\1\0\1\73"+
    "\2\0\3\73\1\0\3\73\1\0\1\203\2\73\1\u0132"+
    "\12\73\1\0\1\73\3\0\1\73\1\203\2\0\2\73"+
    "\1\203\2\73\1\0\3\u0133\15\0\1\u0102\3\0\1\u0102"+
    "\21\0\2\u0102\12\0\3\202\2\0\4\73\1\0\1\73"+
    "\2\0\3\73\1\0\1\u0134\2\73\1\0\1\203\15\73"+
    "\1\0\1\73\3\0\1\73\1\203\2\0\2\73\1\203"+
    "\2\73\1\0\3\202\2\0\4\73\1\0\1\73\2\0"+
    "\3\73\1\0\3\73\1\0\1\203\12\73\1\u0135\2\73"+
    "\1\0\1\73\3\0\1\73\1\203\2\0\2\73\1\203"+
    "\2\73\1\0\3\202\2\0\4\73\1\0\1\73\2\0"+
    "\3\73\1\0\3\73\1\0\1\203\10\73\1\u0136\4\73"+
    "\1\0\1\73\3\0\1\73\1\203\2\0\2\73\1\203"+
    "\2\73\1\0\3\u010e\1\22\1\23\2\0\2\220\1\0"+
    "\1\220\1\30\1\0\3\220\1\0\3\220\1\276\1\0"+
    "\15\220\1\42\1\u0120\1\44\2\0\1\220\3\0\1\220"+
    "\2\0\2\220\1\0\3\202\2\0\2\u0110\1\u0137\1\73"+
    "\1\222\1\u0138\2\0\3\73\1\0\3\73\1\0\1\203"+
    "\2\73\1\u0138\12\73\1\0\1\73\3\0\1\73\1\203"+
    "\2\0\2\73\1\203\2\73\1\0\3\202\2\0\2\u0110"+
    "\2\73\1\222\1\u0138\2\0\3\73\1\0\3\73\1\0"+
    "\1\203\2\73\1\u0138\12\73\1\0\1\73\3\0\1\73"+
    "\1\203\2\0\2\73\1\203\2\73\6\0\2\u0139\1\0"+
    "\1\u0139\1\0\1\u0139\6\0\2\u0139\3\0\1\u0139\1\0"+
    "\1\u0139\4\0\1\u0139\2\0\1\u0139\26\0\2\u013a\1\0"+
    "\1\u013a\1\0\1\u013a\6\0\2\u013a\3\0\1\u013a\1\0"+
    "\1\u013a\4\0\1\u013a\2\0\1\u013a\21\0\3\117\2\120"+
    "\2\u013b\1\0\1\u013b\1\0\1\u013b\1\120\5\0\2\u013b"+
    "\3\0\1\u013b\1\0\1\u013b\4\0\1\u013b\2\0\1\u013b"+
    "\2\0\1\120\1\124\2\120\20\0\2\u013c\1\0\1\u013c"+
    "\1\0\1\u013c\6\0\2\u013c\3\0\1\u013c\1\0\1\u013c"+
    "\4\0\1\u013c\2\0\1\u013c\21\0\3\u013d\2\0\4\26"+
    "\1\0\1\26\2\0\3\26\1\0\3\26\1\u013e\1\126"+
    "\15\26\1\0\1\26\3\0\1\26\1\126\2\0\2\26"+
    "\1\126\2\26\1\0\3\u013f\2\0\4\26\1\0\1\26"+
    "\2\0\3\26\1\u0140\3\26\1\0\1\126\15\26\1\0"+
    "\1\26\3\0\1\26\1\126\2\0\2\26\1\126\2\26"+
    "\1\0\3\125\2\0\4\26\1\0\1\26\2\0\3\26"+
    "\1\0\1\u0141\2\26\1\0\1\126\15\26\1\0\1\26"+
    "\3\0\1\26\1\126\2\0\2\26\1\126\2\26\1\0"+
    "\3\125\2\0\4\26\1\0\1\26\2\0\3\26\1\0"+
    "\3\26\1\0\1\126\4\26\1\u0142\10\26\1\0\1\26"+
    "\3\0\1\26\1\126\2\0\2\26\1\126\2\26\23\0"+
    "\1\u0143\73\0\1\u0144\25\0\3\u0145\2\0\4\26\1\0"+
    "\1\26\2\0\3\26\1\0\3\26\1\u0146\1\126\15\26"+
    "\1\0\1\26\3\0\1\26\1\126\2\0\2\26\1\126"+
    "\2\26\1\0\3\125\2\0\4\26\1\0\1\26\2\0"+
    "\3\26\1\0\2\26\1\u0147\1\0\1\126\15\26\1\0"+
    "\1\26\3\0\1\26\1\126\2\0\2\26\1\126\2\26"+
    "\1\0\3\u0148\2\0\4\26\1\0\1\26\2\0\3\26"+
    "\1\0\3\26\1\0\1\126\15\26\1\0\1\26\3\0"+
    "\1\26\1\126\2\0\2\26\1\126\2\26\1\0\3\125"+
    "\2\0\4\26\1\0\1\26\2\0\3\26\1\0\3\26"+
    "\1\0\1\126\2\26\1\u0149\1\26\1\u014a\10\26\1\0"+
    "\1\26\3\0\1\26\1\126\2\0\2\26\1\126\2\26"+
    "\6\0\2\u014b\1\0\1\u014b\1\0\1\u014b\6\0\2\u014b"+
    "\3\0\1\u014b\1\0\1\u014b\4\0\1\u014b\2\0\1\u014b"+
    "\21\0\3\313\2\0\4\220\1\0\1\220\2\0\3\220"+
    "\1\0\3\220\1\0\1\314\1\220\1\u014c\13\220\1\0"+
    "\1\220\3\0\1\220\1\314\2\0\2\220\1\314\2\220"+
    "\1\0\3\125\2\0\1\u014d\1\u014e\1\26\1\u014e\1\0"+
    "\1\u014e\2\0\3\26\1\0\2\u014e\1\26\1\0\1\126"+
    "\1\u014e\1\26\1\u014e\4\26\1\u014e\2\26\1\u014e\2\26"+
    "\1\0\1\26\3\0\1\26\1\126\2\0\2\26\1\126"+
    "\2\26\1\0\3\125\2\0\2\u014f\2\26\1\0\1\26"+
    "\1\320\1\0\3\26\1\0\3\26\1\0\1\126\15\26"+
    "\1\320\1\26\3\0\1\26\1\126\2\0\2\26\1\126"+
    "\2\26\6\0\2\u0150\1\0\1\u0150\1\0\1\u0150\6\0"+
    "\2\u0150\3\0\1\u0150\1\0\1\u0150\4\0\1\u0150\2\0"+
    "\1\u0150\36\0\1\u0151\47\0\1\22\1\23\2\u0152\1\0"+
    "\1\u0152\1\0\1\u0152\1\30\5\0\2\u0152\3\0\1\u0152"+
    "\1\0\1\u0152\4\0\1\u0152\2\0\1\u0152\2\0\1\42"+
    "\1\54\1\44\14\0\3\u0127\4\0\2\u0153\1\0\1\u0153"+
    "\2\0\3\u0153\1\u0128\3\u0153\1\u0128\1\0\15\u0153\1\0"+
    "\1\u0153\1\0\2\u0128\1\u0153\3\0\1\u0153\2\0\2\u0153"+
    "\10\0\2\u0153\1\0\1\u0153\2\0\3\u0153\1\0\3\u0153"+
    "\2\0\15\u0153\1\0\1\u0153\3\0\1\u0153\3\0\1\u0153"+
    "\2\0\2\u0153\1\0\3\u0129\4\0\2\u0154\1\0\1\u0154"+
    "\2\0\3\u0154\1\u012a\3\u0154\1\u012a\1\0\15\u0154\1\0"+
    "\1\u0154\1\0\2\u012a\1\u0154\3\0\1\u0154\2\0\2\u0154"+
    "\10\0\2\u0154\1\0\1\u0154\2\0\3\u0154\1\0\3\u0154"+
    "\2\0\15\u0154\1\0\1\u0154\3\0\1\u0154\3\0\1\u0154"+
    "\2\0\2\u0154\1\0\3\62\2\0\2\u0155\1\0\1\u0155"+
    "\1\0\1\u0155\6\0\2\u0155\3\0\1\u0155\1\0\1\u0155"+
    "\4\0\1\u0155\2\0\1\u0155\11\0\1\63\7\0\3\u0156"+
    "\2\0\4\u012c\1\0\1\u012c\2\0\3\u012c\1\0\3\u012c"+
    "\1\0\1\u0156\15\u012c\1\0\1\u012c\3\0\1\u012c\1\u0156"+
    "\2\0\2\u012c\1\u0156\2\u012c\1\0\3\202\2\0\4\73"+
    "\1\0\1\73\2\0\3\73\1\0\3\73\1\u013e\1\203"+
    "\15\73\1\0\1\73\3\0\1\73\1\203\2\0\2\73"+
    "\1\203\2\73\1\0\3\u0157\2\0\4\73\1\0\1\73"+
    "\2\0\3\73\1\u0140\3\73\1\0\1\203\15\73\1\0"+
    "\1\73\3\0\1\73\1\203\2\0\2\73\1\203\2\73"+
    "\1\0\3\u0158\15\0\1\u0102\3\0\1\u0102\21\0\2\u0102"+
    "\12\0\3\202\2\0\4\73\1\0\1\73\2\0\3\73"+
    "\1\0\1\u0159\2\73\1\0\1\203\15\73\1\0\1\73"+
    "\3\0\1\73\1\203\2\0\2\73\1\203\2\73\1\0"+
    "\3\202\2\0\4\73\1\0\1\73\2\0\3\73\1\0"+
    "\3\73\1\0\1\203\4\73\1\u015a\10\73\1\0\1\73"+
    "\3\0\1\73\1\203\2\0\2\73\1\203\2\73\1\0"+
    "\3\u015b\2\0\4\73\1\0\1\73\2\0\3\73\1\0"+
    "\3\73\1\u0146\1\203\15\73\1\0\1\73\3\0\1\73"+
    "\1\203\2\0\2\73\1\203\2\73\1\0\3\u0133\4\0"+
    "\2\u012c\1\0\1\u012c\2\0\3\u012c\1\u0102\3\u012c\1\u0102"+
    "\1\0\15\u012c\1\0\1\u012c\1\0\2\u0102\1\u012c\3\0"+
    "\1\u012c\2\0\2\u012c\1\0\3\202\2\0\4\73\1\0"+
    "\1\73\2\0\3\73\1\0\2\73\1\u015c\1\0\1\203"+
    "\15\73\1\0\1\73\3\0\1\73\1\203\2\0\2\73"+
    "\1\203\2\73\1\0\3\u015d\2\0\4\73\1\0\1\73"+
    "\2\0\3\73\1\0\3\73\1\0\1\203\15\73\1\0"+
    "\1\73\3\0\1\73\1\203\2\0\2\73\1\203\2\73"+
    "\1\0\3\202\2\0\4\73\1\0\1\73\2\0\3\73"+
    "\1\0\3\73\1\0\1\203\2\73\1\u015e\1\73\1\u015f"+
    "\10\73\1\0\1\73\3\0\1\73\1\203\2\0\2\73"+
    "\1\203\2\73\1\0\3\202\2\0\1\u0160\1\u0161\1\73"+
    "\1\u0161\1\0\1\u0161\2\0\3\73\1\0\2\u0161\1\73"+
    "\1\0\1\203\1\u0161\1\73\1\u0161\4\73\1\u0161\2\73"+
    "\1\u0161\2\73\1\0\1\73\3\0\1\73\1\203\2\0"+
    "\2\73\1\203\2\73\1\0\3\202\2\0\2\u0162\2\73"+
    "\1\0\1\73\1\320\1\0\3\73\1\0\3\73\1\0"+
    "\1\203\15\73\1\320\1\73\3\0\1\73\1\203\2\0"+
    "\2\73\1\203\2\73\6\0\2\u0163\1\0\1\u0163\1\0"+
    "\1\u0163\6\0\2\u0163\3\0\1\u0163\1\0\1\u0163\4\0"+
    "\1\u0163\2\0\1\u0163\26\0\2\u0164\1\0\1\u0164\1\0"+
    "\1\u0164\6\0\2\u0164\3\0\1\u0164\1\0\1\u0164\4\0"+
    "\1\u0164\2\0\1\u0164\21\0\3\117\2\120\2\u0165\1\0"+
    "\1\u0165\1\0\1\u0165\1\120\5\0\2\u0165\3\0\1\u0165"+
    "\1\0\1\u0165\4\0\1\u0165\2\0\1\u0165\2\0\1\120"+
    "\1\124\2\120\20\0\2\u0166\1\0\1\u0166\1\0\1\u0166"+
    "\6\0\2\u0166\3\0\1\u0166\1\0\1\u0166\4\0\1\u0166"+
    "\2\0\1\u0166\21\0\3\u013d\1\22\1\23\6\0\1\30"+
    "\10\0\1\u013e\16\0\1\42\1\54\1\44\14\0\3\u0167"+
    "\15\0\1\u0168\3\0\1\u0168\21\0\2\u0168\12\0\3\u013f"+
    "\1\22\1\23\6\0\1\30\4\0\1\u0140\22\0\1\42"+
    "\1\54\1\44\14\0\3\125\2\0\4\26\1\0\1\26"+
    "\2\0\3\26\1\0\2\26\1\u0169\1\0\1\126\15\26"+
    "\1\0\1\26\3\0\1\26\1\126\2\0\2\26\1\126"+
    "\2\26\1\0\3\125\2\0\4\26\1\0\1\26\2\0"+
    "\3\26\1\0\3\26\1\0\1\126\1\26\1\u016a\13\26"+
    "\1\0\1\26\3\0\1\26\1\126\2\0\2\26\1\126"+
    "\2\26\35\0\1\u016b\42\0\1\u016c\44\0\3\u0145\1\22"+
    "\1\23\6\0\1\30\10\0\1\u0146\16\0\1\42\1\54"+
    "\1\44\14\0\3\u0146\57\0\3\u016d\2\0\4\26\1\0"+
    "\1\26\2\0\3\26\1\0\3\26\1\u016e\1\126\15\26"+
    "\1\0\1\26\3\0\1\26\1\126\2\0\2\26\1\126"+
    "\2\26\1\0\3\u0148\1\22\1\23\6\0\1\30\13\0"+
    "\1\u016f\13\0\1\42\1\54\1\44\14\0\3\u0170\2\0"+
    "\4\26\1\0\1\26\2\0\3\26\1\0\3\26\1\0"+
    "\1\126\15\26\1\0\1\26\3\0\1\26\1\126\2\0"+
    "\2\26\1\126\2\26\1\0\3\125\2\0\4\26\1\0"+
    "\1\26\2\0\3\26\1\0\3\26\1\0\1\126\1\26"+
    "\1\u0171\13\26\1\0\1\26\3\0\1\26\1\126\2\0"+
    "\2\26\1\126\2\26\6\0\2\u0172\1\0\1\u0172\1\0"+
    "\1\u0172\6\0\2\u0172\3\0\1\u0172\1\0\1\u0172\4\0"+
    "\1\u0172\2\0\1\u0172\21\0\3\313\2\0\4\220\1\0"+
    "\1\220\2\0\3\220\1\0\3\220\1\0\1\314\12\220"+
    "\1\u0173\2\220\1\0\1\220\3\0\1\220\1\314\2\0"+
    "\2\220\1\314\2\220\1\0\3\125\2\0\2\u0174\1\26"+
    "\1\u0174\1\0\1\u0174\2\0\3\26\1\0\2\u0174\1\26"+
    "\1\0\1\126\1\u0174\1\26\1\u0174\4\26\1\u0174\2\26"+
    "\1\u0174\2\26\1\0\1\26\3\0\1\26\1\126\2\0"+
    "\2\26\1\126\2\26\1\0\3\125\2\0\2\u014f\2\26"+
    "\1\0\1\26\2\0\3\26\1\0\3\26\1\0\1\126"+
    "\15\26\1\0\1\26\3\0\1\26\1\126\2\0\2\26"+
    "\1\126\2\26\6\0\2\u0175\1\0\1\u0175\1\0\1\u0175"+
    "\6\0\2\u0175\3\0\1\u0175\1\0\1\u0175\4\0\1\u0175"+
    "\2\0\1\u0175\40\0\1\u0176\45\0\1\22\1\23\2\u0177"+
    "\1\0\1\u0177\1\0\1\u0177\1\30\5\0\2\u0177\3\0"+
    "\1\u0177\1\0\1\u0177\4\0\1\u0177\2\0\1\u0177\2\0"+
    "\1\42\1\54\1\44\14\0\3\u0178\2\0\4\u0153\1\0"+
    "\1\u0153\2\0\3\u0153\1\0\3\u0153\1\0\1\u0178\15\u0153"+
    "\1\0\1\u0153\3\0\1\u0153\1\u0178\2\0\2\u0153\1\u0178"+
    "\2\u0153\1\0\3\u0179\2\0\4\u0154\1\0\1\u0154\2\0"+
    "\3\u0154\1\0\3\u0154\1\0\1\u0179\15\u0154\1\0\1\u0154"+
    "\3\0\1\u0154\1\u0179\2\0\2\u0154\1\u0179\2\u0154\1\0"+
    "\3\62\2\0\2\u017a\1\0\1\u017a\1\0\1\u017a\6\0"+
    "\2\u017a\3\0\1\u017a\1\0\1\u017a\4\0\1\u017a\2\0"+
    "\1\u017a\11\0\1\63\7\0\3\u0156\22\0\1\u017b\24\0"+
    "\1\276\7\0\3\u0157\1\22\1\23\6\0\1\30\4\0"+
    "\1\u0140\3\0\1\276\16\0\1\42\1\54\1\44\14\0"+
    "\3\u0158\4\0\2\u012c\1\0\1\u012c\2\0\3\u012c\1\u0102"+
    "\3\u012c\1\u0102\1\0\15\u012c\1\0\1\u012c\1\0\2\u0102"+
    "\1\u012c\3\0\1\u012c\2\0\2\u012c\1\0\3\202\2\0"+
    "\4\73\1\0\1\73\2\0\3\73\1\0\2\73\1\u017c"+
    "\1\0\1\203\15\73\1\0\1\73\3\0\1\73\1\203"+
    "\2\0\2\73\1\203\2\73\1\0\3\202\2\0\4\73"+
    "\1\0\1\73\2\0\3\73\1\0\3\73\1\0\1\203"+
    "\1\73\1\u017d\13\73\1\0\1\73\3\0\1\73\1\203"+
    "\2\0\2\73\1\203\2\73\1\0\3\u015b\1\22\1\23"+
    "\6\0\1\30\10\0\1\u017e\16\0\1\42\1\54\1\44"+
    "\14\0\3\u017f\2\0\4\73\1\0\1\73\2\0\3\73"+
    "\1\0\3\73\1\u016e\1\203\15\73\1\0\1\73\3\0"+
    "\1\73\1\203\2\0\2\73\1\203\2\73\1\0\3\u015d"+
    "\1\22\1\23\6\0\1\30\10\0\1\276\2\0\1\u016f"+
    "\13\0\1\42\1\54\1\44\14\0\3\u0180\2\0\4\73"+
    "\1\0\1\73\2\0\3\73\1\0\3\73\1\0\1\203"+
    "\15\73\1\0\1\73\3\0\1\73\1\203\2\0\2\73"+
    "\1\203\2\73\1\0\3\202\2\0\4\73\1\0\1\73"+
    "\2\0\3\73\1\0\3\73\1\0\1\203\1\73\1\u0181"+
    "\13\73\1\0\1\73\3\0\1\73\1\203\2\0\2\73"+
    "\1\203\2\73\1\0\3\202\2\0\2\u0182\1\73\1\u0182"+
    "\1\0\1\u0182\2\0\3\73\1\0\2\u0182\1\73\1\0"+
    "\1\203\1\u0182\1\73\1\u0182\4\73\1\u0182\2\73\1\u0182"+
    "\2\73\1\0\1\73\3\0\1\73\1\203\2\0\2\73"+
    "\1\203\2\73\1\0\3\202\2\0\2\u0162\2\73\1\0"+
    "\1\73\2\0\3\73\1\0\3\73\1\0\1\203\15\73"+
    "\1\0\1\73\3\0\1\73\1\203\2\0\2\73\1\203"+
    "\2\73\6\0\2\u0183\1\0\1\u0183\1\0\1\u0183\6\0"+
    "\2\u0183\3\0\1\u0183\1\0\1\u0183\4\0\1\u0183\2\0"+
    "\1\u0183\26\0\2\u0184\1\0\1\u0184\1\0\1\u0184\6\0"+
    "\2\u0184\3\0\1\u0184\1\0\1\u0184\4\0\1\u0184\2\0"+
    "\1\u0184\21\0\3\117\2\120\2\u0185\1\0\1\u0185\1\0"+
    "\1\u0185\1\120\5\0\2\u0185\3\0\1\u0185\1\0\1\u0185"+
    "\4\0\1\u0185\2\0\1\u0185\2\0\1\120\1\124\2\120"+
    "\20\0\2\u0186\1\0\1\u0186\1\0\1\u0186\6\0\2\u0186"+
    "\3\0\1\u0186\1\0\1\u0186\4\0\1\u0186\2\0\1\u0186"+
    "\21\0\3\u0167\4\0\2\u0187\1\0\1\u0187\2\0\3\u0187"+
    "\1\u0168\3\u0187\1\u0168\1\0\15\u0187\1\0\1\u0187\1\0"+
    "\2\u0168\1\u0187\3\0\1\u0187\2\0\2\u0187\10\0\2\u0187"+
    "\1\0\1\u0187\2\0\3\u0187\1\0\3\u0187\2\0\15\u0187"+
    "\1\0\1\u0187\3\0\1\u0187\3\0\1\u0187\2\0\2\u0187"+
    "\1\0\3\u0188\2\0\4\26\1\0\1\26\2\0\3\26"+
    "\1\0\3\26\1\u0189\1\126\15\26\1\0\1\26\3\0"+
    "\1\26\1\126\2\0\2\26\1\126\2\26\1\0\3\125"+
    "\2\0\4\26\1\0\1\26\2\0\3\26\1\0\3\26"+
    "\1\0\1\126\13\26\1\u018a\1\26\1\0\1\26\3\0"+
    "\1\26\1\126\2\0\2\26\1\126\2\26\35\0\1\u018b"+
    "\47\0\1\u018c\37\0\3\u016d\1\22\1\23\6\0\1\30"+
    "\10\0\1\u016e\16\0\1\42\1\54\1\44\55\0\1\u018d"+
    "\20\0\3\u0170\1\22\1\23\6\0\1\30\17\0\1\u018e"+
    "\7\0\1\42\1\54\1\44\14\0\3\125\2\0\4\26"+
    "\1\0\1\26\2\0\3\26\1\0\3\26\1\0\1\126"+
    "\11\26\1\u018f\3\26\1\0\1\26\3\0\1\26\1\126"+
    "\2\0\2\26\1\126\2\26\6\0\2\u0190\1\0\1\u0190"+
    "\1\0\1\u0190\6\0\2\u0190\3\0\1\u0190\1\0\1\u0190"+
    "\4\0\1\u0190\2\0\1\u0190\21\0\3\105\2\0\1\u0191"+
    "\1\u0192\2\220\1\110\1\220\2\0\3\220\1\111\3\220"+
    "\1\111\1\314\15\220\1\0\1\220\1\0\2\111\1\220"+
    "\1\314\2\0\2\220\1\314\2\220\1\0\3\125\2\0"+
    "\2\u0193\1\26\1\u0193\1\0\1\u0193\2\0\3\26\1\0"+
    "\2\u0193\1\26\1\0\1\126\1\u0193\1\26\1\u0193\4\26"+
    "\1\u0193\2\26\1\u0193\2\26\1\0\1\26\3\0\1\26"+
    "\1\126\2\0\2\26\1\126\2\26\6\0\2\u0194\1\0"+
    "\1\u0194\1\0\1\u0194\6\0\2\u0194\3\0\1\u0194\1\0"+
    "\1\u0194\4\0\1\u0194\2\0\1\u0194\21\0\3\u0195\62\0"+
    "\1\22\1\23\2\u0196\1\0\1\u0196\1\0\1\u0196\1\30"+
    "\5\0\2\u0196\3\0\1\u0196\1\0\1\u0196\4\0\1\u0196"+
    "\2\0\1\u0196\2\0\1\42\1\54\1\44\14\0\3\u0178"+
    "\22\0\1\375\24\0\1\376\7\0\3\u0179\22\0\1\u0197"+
    "\24\0\1\u0198\7\0\3\62\2\0\2\u0199\1\0\1\u0199"+
    "\1\0\1\u0199\6\0\2\u0199\3\0\1\u0199\1\0\1\u0199"+
    "\4\0\1\u0199\2\0\1\u0199\11\0\1\63\7\0\3\u017b"+
    "\15\0\1\u019a\41\0\3\u019b\2\0\4\73\1\0\1\73"+
    "\2\0\3\73\1\0\3\73\1\u0189\1\203\15\73\1\0"+
    "\1\73\3\0\1\73\1\203\2\0\2\73\1\203\2\73"+
    "\1\0\3\202\2\0\4\73\1\0\1\73\2\0\3\73"+
    "\1\0\3\73\1\0\1\203\13\73\1\u019c\1\73\1\0"+
    "\1\73\3\0\1\73\1\203\2\0\2\73\1\203\2\73"+
    "\1\0\3\u019d\15\0\1\u0102\3\0\1\u0102\21\0\2\u0102"+
    "\12\0\3\u017f\1\22\1\23\6\0\1\30\10\0\1\u019e"+
    "\16\0\1\42\1\54\1\44\14\0\3\u0180\1\22\1\23"+
    "\6\0\1\30\10\0\1\276\6\0\1\u018e\7\0\1\42"+
    "\1\54\1\44\14\0\3\202\2\0\4\73\1\0\1\73"+
    "\2\0\3\73\1\0\3\73\1\0\1\203\11\73\1\u019f"+
    "\3\73\1\0\1\73\3\0\1\73\1\203\2\0\2\73"+
    "\1\203\2\73\1\0\3\202\2\0\2\u01a0\1\73\1\u01a0"+
    "\1\0\1\u01a0\2\0\3\73\1\0\2\u01a0\1\73\1\0"+
    "\1\203\1\u01a0\1\73\1\u01a0\4\73\1\u01a0\2\73\1\u01a0"+
    "\2\73\1\0\1\73\3\0\1\73\1\203\2\0\2\73"+
    "\1\203\2\73\6\0\2\u01a1\1\0\1\u01a1\1\0\1\u01a1"+
    "\6\0\2\u01a1\3\0\1\u01a1\1\0\1\u01a1\4\0\1\u01a1"+
    "\2\0\1\u01a1\26\0\2\u01a2\1\0\1\u01a2\1\0\1\u01a2"+
    "\6\0\2\u01a2\3\0\1\u01a2\1\0\1\u01a2\4\0\1\u01a2"+
    "\2\0\1\u01a2\21\0\3\117\2\120\2\u01a3\1\0\1\u01a3"+
    "\1\0\1\u01a3\1\120\5\0\2\u01a3\3\0\1\u01a3\1\0"+
    "\1\u01a3\4\0\1\u01a3\2\0\1\u01a3\2\0\1\120\1\124"+
    "\2\120\20\0\2\u01a4\1\0\1\u01a4\1\0\1\u01a4\6\0"+
    "\2\u01a4\3\0\1\u01a4\1\0\1\u01a4\4\0\1\u01a4\2\0"+
    "\1\u01a4\21\0\3\u01a5\2\0\4\u0187\1\0\1\u0187\2\0"+
    "\3\u0187\1\0\3\u0187\1\0\1\u01a5\15\u0187\1\0\1\u0187"+
    "\3\0\1\u0187\1\u01a5\2\0\2\u0187\1\u01a5\2\u0187\1\0"+
    "\3\u0188\1\22\1\23\6\0\1\30\10\0\1\u0189\16\0"+
    "\1\42\1\54\1\44\14\0\3\u0189\57\0\3\u01a6\2\0"+
    "\4\26\1\0\1\26\2\0\3\26\1\0\3\26\1\0"+
    "\1\126\15\26\1\0\1\26\3\0\1\26\1\126\2\0"+
    "\2\26\1\126\2\26\1\0\3\u01a7\43\0\1\u01a8\54\0"+
    "\1\u01a9\20\0\3\u018d\15\0\1\u01aa\73\0\1\u01ab\27\0"+
    "\3\125\2\0\4\26\1\0\1\26\2\0\1\26\1\u01ac"+
    "\1\26\1\0\3\26\1\0\1\126\15\26\1\0\1\26"+
    "\3\0\1\26\1\126\2\0\2\26\1\126\2\26\6\0"+
    "\2\u01ad\1\0\1\u01ad\1\0\1\u01ad\6\0\2\u01ad\3\0"+
    "\1\u01ad\1\0\1\u01ad\4\0\1\u01ad\2\0\1\u01ad\21\0"+
    "\3\313\2\0\2\u0192\1\u01ae\1\220\1\222\1\u01af\2\0"+
    "\3\220\1\0\3\220\1\0\1\314\2\220\1\u01af\12\220"+
    "\1\0\1\220\3\0\1\220\1\314\2\0\2\220\1\314"+
    "\2\220\1\0\3\313\2\0\2\u0192\2\220\1\222\1\u01af"+
    "\2\0\3\220\1\0\3\220\1\0\1\314\2\220\1\u01af"+
    "\12\220\1\0\1\220\3\0\1\220\1\314\2\0\2\220"+
    "\1\314\2\220\1\0\3\125\2\0\2\u01b0\1\26\1\u01b0"+
    "\1\0\1\u01b0\2\0\3\26\1\0\2\u01b0\1\26\1\0"+
    "\1\126\1\u01b0\1\26\1\u01b0\4\26\1\u01b0\2\26\1\u01b0"+
    "\2\26\1\0\1\26\3\0\1\26\1\126\2\0\2\26"+
    "\1\126\2\26\6\0\2\u01b1\1\0\1\u01b1\1\0\1\u01b1"+
    "\6\0\2\u01b1\3\0\1\u01b1\1\0\1\u01b1\4\0\1\u01b1"+
    "\2\0\1\u01b1\21\0\3\u0195\46\0\1\u01b2\13\0\1\22"+
    "\1\23\2\u01b3\1\0\1\u01b3\1\0\1\u01b3\1\30\5\0"+
    "\2\u01b3\3\0\1\u01b3\1\0\1\u01b3\4\0\1\u01b3\2\0"+
    "\1\u01b3\2\0\1\42\1\54\1\44\14\0\3\u0197\15\0"+
    "\1\u01b4\41\0\3\u01b5\15\0\1\u01b6\3\0\1\u01b6\21\0"+
    "\2\u01b6\12\0\3\62\2\0\2\u01b7\1\0\1\u01b7\1\0"+
    "\1\u01b7\6\0\2\u01b7\3\0\1\u01b7\1\0\1\u01b7\4\0"+
    "\1\u01b7\2\0\1\u01b7\11\0\1\63\7\0\3\u019b\1\22"+
    "\1\23\6\0\1\30\10\0\1\u01b8\16\0\1\42\1\54"+
    "\1\44\14\0\3\u01b9\2\0\4\73\1\0\1\73\2\0"+
    "\3\73\1\0\3\73\1\0\1\203\15\73\1\0\1\73"+
    "\3\0\1\73\1\203\2\0\2\73\1\203\2\73\1\0"+
    "\3\u019d\4\0\2\u012c\1\0\1\u012c\2\0\3\u012c\1\u0102"+
    "\3\u012c\1\u0102\1\0\15\u012c\1\0\1\u012c\1\0\2\u0102"+
    "\1\u012c\3\0\1\u012c\2\0\2\u012c\1\0\3\202\2\0"+
    "\4\73\1\0\1\73\2\0\1\73\1\u01ba\1\73\1\0"+
    "\3\73\1\0\1\203\15\73\1\0\1\73\3\0\1\73"+
    "\1\203\2\0\2\73\1\203\2\73\1\0\3\202\2\0"+
    "\2\u01bb\1\73\1\u01bb\1\0\1\u01bb\2\0\3\73\1\0"+
    "\2\u01bb\1\73\1\0\1\203\1\u01bb\1\73\1\u01bb\4\73"+
    "\1\u01bb\2\73\1\u01bb\2\73\1\0\1\73\3\0\1\73"+
    "\1\203\2\0\2\73\1\203\2\73\6\0\2\u01bc\1\0"+
    "\1\u01bc\1\0\1\u01bc\6\0\2\u01bc\3\0\1\u01bc\1\0"+
    "\1\u01bc\4\0\1\u01bc\2\0\1\u01bc\26\0\2\u01bd\1\0"+
    "\1\u01bd\1\0\1\u01bd\6\0\2\u01bd\3\0\1\u01bd\1\0"+
    "\1\u01bd\4\0\1\u01bd\2\0\1\u01bd\21\0\3\117\2\120"+
    "\2\u01be\1\0\1\u01be\1\0\1\u01be\1\120\5\0\2\u01be"+
    "\3\0\1\u01be\1\0\1\u01be\4\0\1\u01be\2\0\1\u01be"+
    "\2\0\1\120\1\124\2\120\20\0\2\u01bf\1\0\1\u01bf"+
    "\1\0\1\u01bf\6\0\2\u01bf\3\0\1\u01bf\1\0\1\u01bf"+
    "\4\0\1\u01bf\2\0\1\u01bf\21\0\3\u01a5\22\0\1\u01c0"+
    "\34\0\3\u01a6\1\22\1\23\6\0\1\30\27\0\1\42"+
    "\1\54\1\44\14\0\3\u01a7\100\0\1\u01c1\102\0\1\u01c2"+
    "\17\0\3\u01c3\2\0\4\26\1\0\1\26\2\0\3\26"+
    "\1\u01c4\3\26\1\0\1\126\15\26\1\0\1\26\3\0"+
    "\1\26\1\126\2\0\2\26\1\126\2\26\6\0\2\u01c5"+
    "\1\0\1\u01c5\1\0\1\u01c5\6\0\2\u01c5\3\0\1\u01c5"+
    "\1\0\1\u01c5\4\0\1\u01c5\2\0\1\u01c5\21\0\3\313"+
    "\2\0\1\u01c6\1\u01c7\1\220\1\u01c7\1\0\1\u01c7\2\0"+
    "\3\220\1\0\2\u01c7\1\220\1\0\1\314\1\u01c7\1\220"+
    "\1\u01c7\4\220\1\u01c7\2\220\1\u01c7\2\220\1\0\1\220"+
    "\3\0\1\220\1\314\2\0\2\220\1\314\2\220\1\0"+
    "\3\313\2\0\2\u01c8\2\220\1\0\1\220\1\320\1\0"+
    "\3\220\1\0\3\220\1\0\1\314\15\220\1\320\1\220"+
    "\3\0\1\220\1\314\2\0\2\220\1\314\2\220\1\0"+
    "\3\125\2\0\2\u01c9\1\26\1\u01c9\1\0\1\u01c9\2\0"+
    "\3\26\1\0\2\u01c9\1\26\1\0\1\126\1\u01c9\1\26"+
    "\1\u01c9\4\26\1\u01c9\2\26\1\u01c9\2\26\1\0\1\26"+
    "\3\0\1\26\1\126\2\0\2\26\1\126\2\26\6\0"+
    "\2\u01ca\1\0\1\u01ca\1\0\1\u01ca\6\0\2\u01ca\3\0"+
    "\1\u01ca\1\0\1\u01ca\4\0\1\u01ca\2\0\1\u01ca\21\0"+
    "\3\u01cb\22\0\1\u01cc\34\0\3\u01b5\4\0\2\u01cd\1\0"+
    "\1\u01cd\2\0\3\u01cd\1\u01b6\3\u01cd\1\u01b6\1\0\15\u01cd"+
    "\1\0\1\u01cd\1\0\2\u01b6\1\u01cd\3\0\1\u01cd\2\0"+
    "\2\u01cd\10\0\2\u01cd\1\0\1\u01cd\2\0\3\u01cd\1\0"+
    "\3\u01cd\2\0\15\u01cd\1\0\1\u01cd\3\0\1\u01cd\3\0"+
    "\1\u01cd\2\0\2\u01cd\1\0\3\62\2\0\2\62\1\0"+
    "\1\62\1\0\1\62\6\0\2\62\3\0\1\62\1\0"+
    "\1\62\4\0\1\62\2\0\1\62\11\0\1\63\7\0"+
    "\3\u01ce\15\0\1\u0102\3\0\1\u0102\21\0\2\u0102\12\0"+
    "\3\u01b9\1\22\1\23\6\0\1\30\10\0\1\276\16\0"+
    "\1\42\1\54\1\44\14\0\3\u01cf\2\0\4\73\1\0"+
    "\1\73\2\0\3\73\1\u01c4\3\73\1\0\1\203\15\73"+
    "\1\0\1\73\3\0\1\73\1\203\2\0\2\73\1\203"+
    "\2\73\1\0\3\202\2\0\2\u01d0\1\73\1\u01d0\1\0"+
    "\1\u01d0\2\0\3\73\1\0\2\u01d0\1\73\1\0\1\203"+
    "\1\u01d0\1\73\1\u01d0\4\73\1\u01d0\2\73\1\u01d0\2\73"+
    "\1\0\1\73\3\0\1\73\1\203\2\0\2\73\1\203"+
    "\2\73\6\0\2\314\1\0\1\314\1\0\1\314\6\0"+
    "\2\314\3\0\1\314\1\0\1\314\4\0\1\314\2\0"+
    "\1\314\26\0\2\322\1\0\1\322\1\0\1\322\6\0"+
    "\2\322\3\0\1\322\1\0\1\322\4\0\1\322\2\0"+
    "\1\322\21\0\3\117\2\120\6\0\1\120\27\0\1\120"+
    "\1\124\2\120\20\0\2\331\1\0\1\331\1\0\1\331"+
    "\6\0\2\331\3\0\1\331\1\0\1\331\4\0\1\331"+
    "\2\0\1\331\21\0\3\u01c0\15\0\1\u01d1\71\0\1\u01d2"+
    "\61\0\1\u01d3\31\0\3\u01c3\1\22\1\23\6\0\1\30"+
    "\4\0\1\u01c4\22\0\1\42\1\54\1\44\21\0\2\355"+
    "\1\0\1\355\1\0\1\355\6\0\2\355\3\0\1\355"+
    "\1\0\1\355\4\0\1\355\2\0\1\355\21\0\3\313"+
    "\2\0\2\u01d4\1\220\1\u01d4\1\0\1\u01d4\2\0\3\220"+
    "\1\0\2\u01d4\1\220\1\0\1\314\1\u01d4\1\220\1\u01d4"+
    "\4\220\1\u01d4\2\220\1\u01d4\2\220\1\0\1\220\3\0"+
    "\1\220\1\314\2\0\2\220\1\314\2\220\1\0\3\313"+
    "\2\0\2\u01c8\2\220\1\0\1\220\2\0\3\220\1\0"+
    "\3\220\1\0\1\314\15\220\1\0\1\220\3\0\1\220"+
    "\1\314\2\0\2\220\1\314\2\220\1\0\3\125\2\0"+
    "\2\u01d5\1\26\1\u01d5\1\0\1\u01d5\2\0\3\26\1\0"+
    "\2\u01d5\1\26\1\0\1\126\1\u01d5\1\26\1\u01d5\4\26"+
    "\1\u01d5\2\26\1\u01d5\2\26\1\0\1\26\3\0\1\26"+
    "\1\126\2\0\2\26\1\126\2\26\6\0\2\366\1\0"+
    "\1\366\1\0\1\366\6\0\2\366\3\0\1\366\1\0"+
    "\1\366\4\0\1\366\2\0\1\366\21\0\3\u01cb\57\0"+
    "\3\u01d6\2\0\4\u01cd\1\0\1\u01cd\2\0\3\u01cd\1\0"+
    "\3\u01cd\1\0\1\u01d6\15\u01cd\1\0\1\u01cd\3\0\1\u01cd"+
    "\1\u01d6\2\0\2\u01cd\1\u01d6\2\u01cd\1\0\3\u01ce\4\0"+
    "\2\u012c\1\0\1\u012c\2\0\3\u012c\1\u0102\3\u012c\1\u0102"+
    "\1\0\15\u012c\1\0\1\u012c\1\0\2\u0102\1\u012c\3\0"+
    "\1\u012c\2\0\2\u012c\1\0\3\u01cf\1\22\1\23\6\0"+
    "\1\30\4\0\1\u01c4\3\0\1\276\16\0\1\42\1\54"+
    "\1\44\14\0\3\202\2\0\2\u01d7\1\73\1\u01d7\1\0"+
    "\1\u01d7\2\0\3\73\1\0\2\u01d7\1\73\1\0\1\203"+
    "\1\u01d7\1\73\1\u01d7\4\73\1\u01d7\2\73\1\u01d7\2\73"+
    "\1\0\1\73\3\0\1\73\1\203\2\0\2\73\1\203"+
    "\2\73\1\0\3\u01d8\43\0\1\u01d9\13\0\3\u01d3\15\0"+
    "\1\u01da\41\0\3\313\2\0\2\u01db\1\220\1\u01db\1\0"+
    "\1\u01db\2\0\3\220\1\0\2\u01db\1\220\1\0\1\314"+
    "\1\u01db\1\220\1\u01db\4\220\1\u01db\2\220\1\u01db\2\220"+
    "\1\0\1\220\3\0\1\220\1\314\2\0\2\220\1\314"+
    "\2\220\1\0\3\125\2\0\2\u01dc\1\26\1\u01dc\1\0"+
    "\1\u01dc\2\0\3\26\1\0\2\u01dc\1\26\1\0\1\126"+
    "\1\u01dc\1\26\1\u01dc\4\26\1\u01dc\2\26\1\u01dc\2\26"+
    "\1\0\1\26\3\0\1\26\1\126\2\0\2\26\1\126"+
    "\2\26\1\0\3\u01d6\50\0\1\377\6\0\3\202\2\0"+
    "\2\u01dd\1\73\1\u01dd\1\0\1\u01dd\2\0\3\73\1\0"+
    "\2\u01dd\1\73\1\0\1\203\1\u01dd\1\73\1\u01dd\4\73"+
    "\1\u01dd\2\73\1\u01dd\2\73\1\0\1\73\3\0\1\73"+
    "\1\203\2\0\2\73\1\203\2\73\1\0\3\u01d8\57\0"+
    "\3\313\2\0\2\u01de\1\220\1\u01de\1\0\1\u01de\2\0"+
    "\3\220\1\0\2\u01de\1\220\1\0\1\314\1\u01de\1\220"+
    "\1\u01de\4\220\1\u01de\2\220\1\u01de\2\220\1\0\1\220"+
    "\3\0\1\220\1\314\2\0\2\220\1\314\2\220\1\0"+
    "\3\125\2\0\2\u01df\1\26\1\u01df\1\0\1\u01df\2\0"+
    "\3\26\1\0\2\u01df\1\26\1\0\1\126\1\u01df\1\26"+
    "\1\u01df\4\26\1\u01df\2\26\1\u01df\2\26\1\0\1\26"+
    "\3\0\1\26\1\126\2\0\2\26\1\126\2\26\1\0"+
    "\3\202\2\0\2\u01e0\1\73\1\u01e0\1\0\1\u01e0\2\0"+
    "\3\73\1\0\2\u01e0\1\73\1\0\1\203\1\u01e0\1\73"+
    "\1\u01e0\4\73\1\u01e0\2\73\1\u01e0\2\73\1\0\1\73"+
    "\3\0\1\73\1\203\2\0\2\73\1\203\2\73\1\0"+
    "\3\313\2\0\2\u01e1\1\220\1\u01e1\1\0\1\u01e1\2\0"+
    "\3\220\1\0\2\u01e1\1\220\1\0\1\314\1\u01e1\1\220"+
    "\1\u01e1\4\220\1\u01e1\2\220\1\u01e1\2\220\1\0\1\220"+
    "\3\0\1\220\1\314\2\0\2\220\1\314\2\220\1\0"+
    "\3\313\2\0\2\u01e2\1\220\1\u01e2\1\0\1\u01e2\2\0"+
    "\3\220\1\0\2\u01e2\1\220\1\0\1\314\1\u01e2\1\220"+
    "\1\u01e2\4\220\1\u01e2\2\220\1\u01e2\2\220\1\0\1\220"+
    "\3\0\1\220\1\314\2\0\2\220\1\314\2\220\1\0"+
    "\3\313\2\0\2\u01e3\1\220\1\u01e3\1\0\1\u01e3\2\0"+
    "\3\220\1\0\2\u01e3\1\220\1\0\1\314\1\u01e3\1\220"+
    "\1\u01e3\4\220\1\u01e3\2\220\1\u01e3\2\220\1\0\1\220"+
    "\3\0\1\220\1\314\2\0\2\220\1\314\2\220\1\0"+
    "\3\313\2\0\2\u01e4\1\220\1\u01e4\1\0\1\u01e4\2\0"+
    "\3\220\1\0\2\u01e4\1\220\1\0\1\314\1\u01e4\1\220"+
    "\1\u01e4\4\220\1\u01e4\2\220\1\u01e4\2\220\1\0\1\220"+
    "\3\0\1\220\1\314\2\0\2\220\1\314\2\220";

  private static int [] zzUnpackTrans() {
    int [] result = new int[22050];
    int offset = 0;
    offset = zzUnpackTrans(ZZ_TRANS_PACKED_0, offset, result);
    return result;
  }

  private static int zzUnpackTrans(String packed, int offset, int [] result) {
    int i = 0;       /* index in packed string  */
    int j = offset;  /* index in unpacked array */
    int l = packed.length();
    while (i < l) {
      int count = packed.charAt(i++);
      int value = packed.charAt(i++);
      value--;
      do result[j++] = value; while (--count > 0);
    }
    return j;
  }


  /* error codes */
  private static final int ZZ_UNKNOWN_ERROR = 0;
  private static final int ZZ_NO_MATCH = 1;
  private static final int ZZ_PUSHBACK_2BIG = 2;

  /* error messages for the codes above */
  private static final String ZZ_ERROR_MSG[] = {
    "Unknown internal scanner error",
    "Error: could not match input",
    "Error: pushback value was too large"
  };

  /**
   * ZZ_ATTRIBUTE[aState] contains the attributes of state <code>aState</code>
   */
  private static final int [] ZZ_ATTRIBUTE = zzUnpackAttribute();

  private static final String ZZ_ATTRIBUTE_PACKED_0 =
    "\1\0\1\11\15\1\1\0\1\1\24\0\1\1\22\0"+
    "\1\1\1\11\12\0\3\1\2\0\3\1\2\0\1\1"+
    "\1\11\4\0\5\1\16\0\3\1\3\0\3\1\3\0"+
    "\1\1\1\11\13\0\3\1\16\0\1\1\3\0\1\1"+
    "\10\0\1\1\7\0\1\1\1\0\2\1\5\0\1\1"+
    "\4\0\1\1\16\0\1\1\1\0\1\1\4\0\1\1"+
    "\1\11\3\1\1\0\1\1\1\11\3\1\2\0\1\1"+
    "\1\11\3\1\1\0\1\1\1\11\2\0\2\1\10\0"+
    "\1\1\1\11\3\1\1\0\4\1\1\11\3\1\11\0"+
    "\1\1\2\0\1\1\3\0\1\1\3\0\5\1\1\0"+
    "\1\1\12\0\1\1\3\0\1\1\2\0\1\11\10\0"+
    "\1\1\3\0\1\1\5\0\2\1\1\0\2\1\1\0"+
    "\1\1\1\11\4\0\2\1\1\0\1\1\2\0\1\1"+
    "\1\0\4\1\6\0\2\1\2\0\1\1\1\0\1\1"+
    "\2\0\5\1\1\0\1\1\6\0\1\1\1\11\1\0"+
    "\1\1\1\0\1\1\1\0\2\1\10\0\3\1\1\0"+
    "\3\1\1\0\1\1\1\0\2\1\6\0\5\1\5\0"+
    "\1\11\1\1\1\0\2\1\1\0\3\1\1\0\1\1"+
    "\1\0\2\1\1\11\1\0\1\11\2\0\1\1\2\0"+
    "\2\1\2\0\1\11\3\0\2\1\1\0\3\1\1\0"+
    "\1\1\3\0\1\1\1\11\7\1\1\11\1\0\3\1"+
    "\1\11\2\0\2\1\1\0\2\1\2\11\12\1";

  private static int [] zzUnpackAttribute() {
    int [] result = new int[484];
    int offset = 0;
    offset = zzUnpackAttribute(ZZ_ATTRIBUTE_PACKED_0, offset, result);
    return result;
  }

  private static int zzUnpackAttribute(String packed, int offset, int [] result) {
    int i = 0;       /* index in packed string  */
    int j = offset;  /* index in unpacked array */
    int l = packed.length();
    while (i < l) {
      int count = packed.charAt(i++);
      int value = packed.charAt(i++);
      do result[j++] = value; while (--count > 0);
    }
    return j;
  }

  /** the input device */
  private java.io.Reader zzReader;

  /** the current state of the DFA */
  private int zzState;

  /** the current lexical state */
  private int zzLexicalState = YYINITIAL;

  /** this buffer contains the current text to be matched and is
      the source of the yytext() string */
  private char zzBuffer[] = new char[ZZ_BUFFERSIZE];

  /** the textposition at the last accepting state */
  private int zzMarkedPos;

  /** the current text position in the buffer */
  private int zzCurrentPos;

  /** startRead marks the beginning of the yytext() string in the buffer */
  private int zzStartRead;

  /** endRead marks the last character in the buffer, that has been read
      from input */
  private int zzEndRead;

  /** number of newlines encountered up to the start of the matched text */
  private int yyline;

  /** the number of characters up to the start of the matched text */
  private int yychar;

  /**
   * the number of characters from the last newline up to the start of the 
   * matched text
   */
  private int yycolumn;

  /** 
   * zzAtBOL == true iff the scanner is currently at the beginning of a line
   */
  private boolean zzAtBOL = true;

  /** zzAtEOF == true iff the scanner is at the EOF */
  private boolean zzAtEOF;

  /** denotes if the user-EOF-code has already been executed */
  private boolean zzEOFDone;
  
  /** 
   * The number of occupied positions in zzBuffer beyond zzEndRead.
   * When a lead/high surrogate has been read from the input stream
   * into the final zzBuffer position, this will have a value of 1;
   * otherwise, it will have a value of 0.
   */
  private int zzFinalHighSurrogate = 0;

  /* user code: */
    public class Tuple {

        public final int line;
        public final int col;
        public final String token;
        public final String type;

        public Tuple(int line, int col, String token, String type) {
            this.line = line;
            this.col = col;
            this.token = token;
            this.type = type;
        }
    }

    HashSet<String> keywords = new HashSet<>(Arrays.asList(
            "if", "while", "switch", "for", "foreach", "class", "behaviour",
            "based", "on", "behaves", "like", "try", "catch", "function",
            "mod", "of", "instance", "empty", "is"
    ));
    List<Tuple> foundKeywords = new ArrayList<>();


  /**
   * Creates a new scanner
   *
   * @param   in  the java.io.Reader to read input from.
   */
  EogenCompiler(java.io.Reader in) {
    this.zzReader = in;
  }


  /** 
   * Unpacks the compressed character translation table.
   *
   * @param packed   the packed character translation table
   * @return         the unpacked character translation table
   */
  private static char [] zzUnpackCMap(String packed) {
    char [] map = new char[0x110000];
    int i = 0;  /* index in packed string  */
    int j = 0;  /* index in unpacked array */
    while (i < 3458) {
      int  count = packed.charAt(i++);
      char value = packed.charAt(i++);
      do map[j++] = value; while (--count > 0);
    }
    return map;
  }


  /**
   * Refills the input buffer.
   *
   * @return      <code>false</code>, iff there was new input.
   * 
   * @exception   java.io.IOException  if any I/O-Error occurs
   */
  private boolean zzRefill() throws java.io.IOException {

    /* first: make room (if you can) */
    if (zzStartRead > 0) {
      zzEndRead += zzFinalHighSurrogate;
      zzFinalHighSurrogate = 0;
      System.arraycopy(zzBuffer, zzStartRead,
                       zzBuffer, 0,
                       zzEndRead-zzStartRead);

      /* translate stored positions */
      zzEndRead-= zzStartRead;
      zzCurrentPos-= zzStartRead;
      zzMarkedPos-= zzStartRead;
      zzStartRead = 0;
    }

    /* is the buffer big enough? */
    if (zzCurrentPos >= zzBuffer.length - zzFinalHighSurrogate) {
      /* if not: blow it up */
      char newBuffer[] = new char[zzBuffer.length*2];
      System.arraycopy(zzBuffer, 0, newBuffer, 0, zzBuffer.length);
      zzBuffer = newBuffer;
      zzEndRead += zzFinalHighSurrogate;
      zzFinalHighSurrogate = 0;
    }

    /* fill the buffer with new input */
    int requested = zzBuffer.length - zzEndRead;
    int numRead = zzReader.read(zzBuffer, zzEndRead, requested);

    /* not supposed to occur according to specification of java.io.Reader */
    if (numRead == 0) {
      throw new java.io.IOException("Reader returned 0 characters. See JFlex examples for workaround.");
    }
    if (numRead > 0) {
      zzEndRead += numRead;
      /* If numRead == requested, we might have requested to few chars to
         encode a full Unicode character. We assume that a Reader would
         otherwise never return half characters. */
      if (numRead == requested) {
        if (Character.isHighSurrogate(zzBuffer[zzEndRead - 1])) {
          --zzEndRead;
          zzFinalHighSurrogate = 1;
        }
      }
      /* potentially more input available */
      return false;
    }

    /* numRead < 0 ==> end of stream */
    return true;
  }

    
  /**
   * Closes the input stream.
   */
  public final void yyclose() throws java.io.IOException {
    zzAtEOF = true;            /* indicate end of file */
    zzEndRead = zzStartRead;  /* invalidate buffer    */

    if (zzReader != null)
      zzReader.close();
  }


  /**
   * Resets the scanner to read from a new input stream.
   * Does not close the old reader.
   *
   * All internal variables are reset, the old input stream 
   * <b>cannot</b> be reused (internal buffer is discarded and lost).
   * Lexical state is set to <tt>ZZ_INITIAL</tt>.
   *
   * Internal scan buffer is resized down to its initial length, if it has grown.
   *
   * @param reader   the new input stream 
   */
  public final void yyreset(java.io.Reader reader) {
    zzReader = reader;
    zzAtBOL  = true;
    zzAtEOF  = false;
    zzEOFDone = false;
    zzEndRead = zzStartRead = 0;
    zzCurrentPos = zzMarkedPos = 0;
    zzFinalHighSurrogate = 0;
    yyline = yychar = yycolumn = 0;
    zzLexicalState = YYINITIAL;
    if (zzBuffer.length > ZZ_BUFFERSIZE)
      zzBuffer = new char[ZZ_BUFFERSIZE];
  }


  /**
   * Returns the current lexical state.
   */
  public final int yystate() {
    return zzLexicalState;
  }


  /**
   * Enters a new lexical state
   *
   * @param newState the new lexical state
   */
  public final void yybegin(int newState) {
    zzLexicalState = newState;
  }


  /**
   * Returns the text matched by the current regular expression.
   */
  public final String yytext() {
    return new String( zzBuffer, zzStartRead, zzMarkedPos-zzStartRead );
  }


  /**
   * Returns the character at position <tt>pos</tt> from the 
   * matched text. 
   * 
   * It is equivalent to yytext().charAt(pos), but faster
   *
   * @param pos the position of the character to fetch. 
   *            A value from 0 to yylength()-1.
   *
   * @return the character at position pos
   */
  public final char yycharat(int pos) {
    return zzBuffer[zzStartRead+pos];
  }


  /**
   * Returns the length of the matched text region.
   */
  public final int yylength() {
    return zzMarkedPos-zzStartRead;
  }


  /**
   * Reports an error that occured while scanning.
   *
   * In a wellformed scanner (no or only correct usage of 
   * yypushback(int) and a match-all fallback rule) this method 
   * will only be called with things that "Can't Possibly Happen".
   * If this method is called, something is seriously wrong
   * (e.g. a JFlex bug producing a faulty scanner etc.).
   *
   * Usual syntax/scanner level error handling should be done
   * in error fallback rules.
   *
   * @param   errorCode  the code of the errormessage to display
   */
  private void zzScanError(int errorCode) {
    String message;
    try {
      message = ZZ_ERROR_MSG[errorCode];
    }
    catch (ArrayIndexOutOfBoundsException e) {
      message = ZZ_ERROR_MSG[ZZ_UNKNOWN_ERROR];
    }

    throw new Error(message);
  } 


  /**
   * Pushes the specified amount of characters back into the input stream.
   *
   * They will be read again by then next call of the scanning method
   *
   * @param number  the number of characters to be read again.
   *                This number must not be greater than yylength()!
   */
  public void yypushback(int number)  {
    if ( number > yylength() )
      zzScanError(ZZ_PUSHBACK_2BIG);

    zzMarkedPos -= number;
  }


  /**
   * Contains user EOF-code, which will be executed exactly once,
   * when the end of file is reached
   */
  private void zzDoEOF() {
    if (!zzEOFDone) {
      zzEOFDone = true;
        for (Tuple kwt : foundKeywords) {
       if (!keywords.contains(kwt.token.trim())) {
           System.out.println("detected a " + kwt.type + " : " + kwt.token.trim() + " , line = " + kwt.line + " , col = " + kwt.col);
       }
    }

    }
  }


  /**
   * Resumes scanning until the next regular expression is matched,
   * the end of input is encountered or an I/O-Error occurs.
   *
   * @return      the next token
   * @exception   java.io.IOException  if any I/O-Error occurs
   */
  public int yylex() throws java.io.IOException {
    int zzInput;
    int zzAction;

    // cached fields:
    int zzCurrentPosL;
    int zzMarkedPosL;
    int zzEndReadL = zzEndRead;
    char [] zzBufferL = zzBuffer;
    char [] zzCMapL = ZZ_CMAP;

    int [] zzTransL = ZZ_TRANS;
    int [] zzRowMapL = ZZ_ROWMAP;
    int [] zzAttrL = ZZ_ATTRIBUTE;

    while (true) {
      zzMarkedPosL = zzMarkedPos;

      boolean zzR = false;
      int zzCh;
      int zzCharCount;
      for (zzCurrentPosL = zzStartRead  ;
           zzCurrentPosL < zzMarkedPosL ;
           zzCurrentPosL += zzCharCount ) {
        zzCh = Character.codePointAt(zzBufferL, zzCurrentPosL, zzMarkedPosL);
        zzCharCount = Character.charCount(zzCh);
        switch (zzCh) {
        case '\u000B':  // fall through
        case '\u000C':  // fall through
        case '\u0085':  // fall through
        case '\u2028':  // fall through
        case '\u2029':
          yyline++;
          yycolumn = 0;
          zzR = false;
          break;
        case '\r':
          yyline++;
          yycolumn = 0;
          zzR = true;
          break;
        case '\n':
          if (zzR)
            zzR = false;
          else {
            yyline++;
            yycolumn = 0;
          }
          break;
        default:
          zzR = false;
          yycolumn += zzCharCount;
        }
      }

      if (zzR) {
        // peek one character ahead if it is \n (if we have counted one line too much)
        boolean zzPeek;
        if (zzMarkedPosL < zzEndReadL)
          zzPeek = zzBufferL[zzMarkedPosL] == '\n';
        else if (zzAtEOF)
          zzPeek = false;
        else {
          boolean eof = zzRefill();
          zzEndReadL = zzEndRead;
          zzMarkedPosL = zzMarkedPos;
          zzBufferL = zzBuffer;
          if (eof) 
            zzPeek = false;
          else 
            zzPeek = zzBufferL[zzMarkedPosL] == '\n';
        }
        if (zzPeek) yyline--;
      }
      zzAction = -1;

      zzCurrentPosL = zzCurrentPos = zzStartRead = zzMarkedPosL;
  
      zzState = ZZ_LEXSTATE[zzLexicalState];

      // set up zzAction for empty match case:
      int zzAttributes = zzAttrL[zzState];
      if ( (zzAttributes & 1) == 1 ) {
        zzAction = zzState;
      }


      zzForAction: {
        while (true) {
    
          if (zzCurrentPosL < zzEndReadL) {
            zzInput = Character.codePointAt(zzBufferL, zzCurrentPosL, zzEndReadL);
            zzCurrentPosL += Character.charCount(zzInput);
          }
          else if (zzAtEOF) {
            zzInput = YYEOF;
            break zzForAction;
          }
          else {
            // store back cached positions
            zzCurrentPos  = zzCurrentPosL;
            zzMarkedPos   = zzMarkedPosL;
            boolean eof = zzRefill();
            // get translated positions and possibly new buffer
            zzCurrentPosL  = zzCurrentPos;
            zzMarkedPosL   = zzMarkedPos;
            zzBufferL      = zzBuffer;
            zzEndReadL     = zzEndRead;
            if (eof) {
              zzInput = YYEOF;
              break zzForAction;
            }
            else {
              zzInput = Character.codePointAt(zzBufferL, zzCurrentPosL, zzEndReadL);
              zzCurrentPosL += Character.charCount(zzInput);
            }
          }
          int zzNext = zzTransL[ zzRowMapL[zzState] + zzCMapL[zzInput] ];
          if (zzNext == -1) break zzForAction;
          zzState = zzNext;

          zzAttributes = zzAttrL[zzState];
          if ( (zzAttributes & 1) == 1 ) {
            zzAction = zzState;
            zzMarkedPosL = zzCurrentPosL;
            if ( (zzAttributes & 8) == 8 ) break zzForAction;
          }

        }
      }

      // store back cached position
      zzMarkedPos = zzMarkedPosL;

      if (zzInput == YYEOF && zzStartRead == zzCurrentPos) {
        zzAtEOF = true;
            zzDoEOF();
        return YYEOF;
      }
      else {
        switch (zzAction < 0 ? zzAction : ZZ_ACTION[zzAction]) {
          case 1: 
            { System.out.print(yytext());
            } 
            // fall through
          case 32: break;
          case 2: 
            { /* ignore */
            } 
            // fall through
          case 33: break;
          case 3: 
            { foundKeywords.add(new Tuple(yyline, yycolumn, yytext(), "chain sign"));
            } 
            // fall through
          case 34: break;
          case 4: 
            { foundKeywords.add(new Tuple(yyline, yycolumn, yytext(), "comment"));
            } 
            // fall through
          case 35: break;
          case 5: 
            { foundKeywords.add(new Tuple(yyline, yycolumn, yytext(), "array"));
            } 
            // fall through
          case 36: break;
          case 6: 
            { foundKeywords.add(new Tuple(yyline, yycolumn, yytext(), "is"));
            } 
            // fall through
          case 37: break;
          case 7: 
            { foundKeywords.add(new Tuple(yyline, yycolumn, yytext(), "division"));
            } 
            // fall through
          case 38: break;
          case 8: 
            { foundKeywords.add(new Tuple(yyline, yycolumn, yytext(), "multiply"));
            } 
            // fall through
          case 39: break;
          case 9: 
            { foundKeywords.add(new Tuple(yyline, yycolumn, yytext(), "number"));
            } 
            // fall through
          case 40: break;
          case 10: 
            { foundKeywords.add(new Tuple(yyline, yycolumn, yytext(), "identifier"));
            } 
            // fall through
          case 41: break;
          case 11: 
            { foundKeywords.add(new Tuple(yyline, yycolumn, yytext(), "minus"));
            } 
            // fall through
          case 42: break;
          case 12: 
            { foundKeywords.add(new Tuple(yyline, yycolumn, yytext(), "sum"));
            } 
            // fall through
          case 43: break;
          case 13: 
            { foundKeywords.add(new Tuple(yyline, yycolumn, yytext(), "power"));
            } 
            // fall through
          case 44: break;
          case 14: 
            { foundKeywords.add(new Tuple(yyline, yycolumn, yytext(), "if"));
            } 
            // fall through
          case 45: break;
          case 15: 
            { foundKeywords.add(new Tuple(yyline, yycolumn, yytext(), "try"));
            } 
            // fall through
          case 46: break;
          case 16: 
            { foundKeywords.add(new Tuple(yyline, yycolumn, yytext(), "for"));
            } 
            // fall through
          case 47: break;
          case 17: 
            { foundKeywords.add(new Tuple(yyline, yycolumn, yytext(), "callback"));
            } 
            // fall through
          case 48: break;
          case 18: 
            { foundKeywords.add(new Tuple(yyline, yycolumn, yytext(), "class"));
            } 
            // fall through
          case 49: break;
          case 19: 
            { foundKeywords.add(new Tuple(yyline, yycolumn, yytext(), "while"));
            } 
            // fall through
          case 50: break;
          case 20: 
            { foundKeywords.add(new Tuple(yyline, yycolumn, yytext(), "switch"));
            } 
            // fall through
          case 51: break;
          case 21: 
            { foundKeywords.add(new Tuple(yyline, yycolumn, yytext(), "foreach"));
            } 
            // fall through
          case 52: break;
          case 22: 
            { foundKeywords.add(new Tuple(yyline, yycolumn, yytext(), "function"));
            } 
            // fall through
          case 53: break;
          case 23: 
            { foundKeywords.add(new Tuple(yyline, yycolumn, yytext(), "function key"));
            } 
            // fall through
          case 54: break;
          case 24: 
            { foundKeywords.add(new Tuple(yyline, yycolumn, yytext(), "static sign"));
            } 
            // fall through
          case 55: break;
          case 25: 
            { foundKeywords.add(new Tuple(yyline, yycolumn, yytext(), "based on"));
            } 
            // fall through
          case 56: break;
          case 26: 
            { foundKeywords.add(new Tuple(yyline, yycolumn, yytext(), "function call"));
            } 
            // fall through
          case 57: break;
          case 27: 
            { foundKeywords.add(new Tuple(yyline, yycolumn, yytext(), "behaviour"));
            } 
            // fall through
          case 58: break;
          case 28: 
            { foundKeywords.add(new Tuple(yyline, yycolumn, yytext(), "empty (null)"));
            } 
            // fall through
          case 59: break;
          case 29: 
            { foundKeywords.add(new Tuple(yyline, yycolumn, yytext(), "catch"));
            } 
            // fall through
          case 60: break;
          case 30: 
            { foundKeywords.add(new Tuple(yyline, yycolumn, yytext(), "non static sign"));
            } 
            // fall through
          case 61: break;
          case 31: 
            { foundKeywords.add(new Tuple(yyline, yycolumn, yytext(), "behave like"));
            } 
            // fall through
          case 62: break;
          default:
            zzScanError(ZZ_NO_MATCH);
        }
      }
    }
  }

  /**
   * Runs the scanner on input files.
   *
   * This is a standalone scanner, it will print any unmatched
   * text to System.out unchanged.
   *
   * @param argv   the command line, contains the filenames to run
   *               the scanner on.
   */
  public static void main(String argv[]) {
    if (argv.length == 0) {
      System.out.println("Usage : java EogenCompiler [ --encoding <name> ] <inputfile(s)>");
    }
    else {
      int firstFilePos = 0;
      String encodingName = "UTF-8";
      if (argv[0].equals("--encoding")) {
        firstFilePos = 2;
        encodingName = argv[1];
        try {
          java.nio.charset.Charset.forName(encodingName); // Side-effect: is encodingName valid? 
        } catch (Exception e) {
          System.out.println("Invalid encoding '" + encodingName + "'");
          return;
        }
      }
      for (int i = firstFilePos; i < argv.length; i++) {
        EogenCompiler scanner = null;
        try {
          java.io.FileInputStream stream = new java.io.FileInputStream(argv[i]);
          java.io.Reader reader = new java.io.InputStreamReader(stream, encodingName);
          scanner = new EogenCompiler(reader);
          while ( !scanner.zzAtEOF ) scanner.yylex();
        }
        catch (java.io.FileNotFoundException e) {
          System.out.println("File not found : \""+argv[i]+"\"");
        }
        catch (java.io.IOException e) {
          System.out.println("IO error scanning file \""+argv[i]+"\"");
          System.out.println(e);
        }
        catch (Exception e) {
          System.out.println("Unexpected exception:");
          e.printStackTrace();
        }
      }
    }
  }


}
